#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.1
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MainEntity.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Aisha_real")]
	public partial class ShoppingEntityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertSubscribePlanEntity(MainEntity.Models.Shopping.SubscribePlanEntity instance);
    partial void UpdateSubscribePlanEntity(MainEntity.Models.Shopping.SubscribePlanEntity instance);
    partial void DeleteSubscribePlanEntity(MainEntity.Models.Shopping.SubscribePlanEntity instance);
    partial void InsertMembership(MainEntity.Models.Shopping.Membership instance);
    partial void UpdateMembership(MainEntity.Models.Shopping.Membership instance);
    partial void DeleteMembership(MainEntity.Models.Shopping.Membership instance);
    partial void InsertShoppingLog(MainEntity.Models.Shopping.ShoppingLog instance);
    partial void UpdateShoppingLog(MainEntity.Models.Shopping.ShoppingLog instance);
    partial void DeleteShoppingLog(MainEntity.Models.Shopping.ShoppingLog instance);
    partial void InsertMembershipXrefSubscribePlan(MainEntity.Models.Shopping.MembershipXrefSubscribePlan instance);
    partial void UpdateMembershipXrefSubscribePlan(MainEntity.Models.Shopping.MembershipXrefSubscribePlan instance);
    partial void DeleteMembershipXrefSubscribePlan(MainEntity.Models.Shopping.MembershipXrefSubscribePlan instance);
    partial void InsertProductEntity(MainEntity.Models.Shopping.ProductEntity instance);
    partial void UpdateProductEntity(MainEntity.Models.Shopping.ProductEntity instance);
    partial void DeleteProductEntity(MainEntity.Models.Shopping.ProductEntity instance);
    partial void InsertEntityItem(MainEntity.Models.Shopping.EntityItem instance);
    partial void UpdateEntityItem(MainEntity.Models.Shopping.EntityItem instance);
    partial void DeleteEntityItem(MainEntity.Models.Shopping.EntityItem instance);
    partial void InsertProductXrefEntity(MainEntity.Models.Shopping.ProductXrefEntity instance);
    partial void UpdateProductXrefEntity(MainEntity.Models.Shopping.ProductXrefEntity instance);
    partial void DeleteProductXrefEntity(MainEntity.Models.Shopping.ProductXrefEntity instance);
    partial void InsertShoppingMembershipAddress(MainEntity.Models.Shopping.ShoppingMembershipAddress instance);
    partial void UpdateShoppingMembershipAddress(MainEntity.Models.Shopping.ShoppingMembershipAddress instance);
    partial void DeleteShoppingMembershipAddress(MainEntity.Models.Shopping.ShoppingMembershipAddress instance);
    partial void InsertShoppingState(MainEntity.Models.Shopping.ShoppingState instance);
    partial void UpdateShoppingState(MainEntity.Models.Shopping.ShoppingState instance);
    partial void DeleteShoppingState(MainEntity.Models.Shopping.ShoppingState instance);
    partial void InsertEntityType(MainEntity.Models.Shopping.EntityType instance);
    partial void UpdateEntityType(MainEntity.Models.Shopping.EntityType instance);
    partial void DeleteEntityType(MainEntity.Models.Shopping.EntityType instance);
    partial void InsertShopping(MainEntity.Models.Shopping.Shopping instance);
    partial void UpdateShopping(MainEntity.Models.Shopping.Shopping instance);
    partial void DeleteShopping(MainEntity.Models.Shopping.Shopping instance);
    partial void InsertProductType(MainEntity.Models.Shopping.ProductType instance);
    partial void UpdateProductType(MainEntity.Models.Shopping.ProductType instance);
    partial void DeleteProductType(MainEntity.Models.Shopping.ProductType instance);
    partial void InsertClassEntity(MainEntity.Models.Shopping.ClassEntity instance);
    partial void UpdateClassEntity(MainEntity.Models.Shopping.ClassEntity instance);
    partial void DeleteClassEntity(MainEntity.Models.Shopping.ClassEntity instance);
    partial void InsertSpeakerEntity(MainEntity.Models.Shopping.SpeakerEntity instance);
    partial void UpdateSpeakerEntity(MainEntity.Models.Shopping.SpeakerEntity instance);
    partial void DeleteSpeakerEntity(MainEntity.Models.Shopping.SpeakerEntity instance);
    partial void InsertCatalogItemExtend(MainEntity.Models.Shopping.CatalogItemExtend instance);
    partial void UpdateCatalogItemExtend(MainEntity.Models.Shopping.CatalogItemExtend instance);
    partial void DeleteCatalogItemExtend(MainEntity.Models.Shopping.CatalogItemExtend instance);
    partial void InsertShoppingCartPayment(MainEntity.Models.Shopping.ShoppingCartPayment instance);
    partial void UpdateShoppingCartPayment(MainEntity.Models.Shopping.ShoppingCartPayment instance);
    partial void DeleteShoppingCartPayment(MainEntity.Models.Shopping.ShoppingCartPayment instance);
    partial void InsertShoppingTransaction(MainEntity.Models.Shopping.ShoppingTransaction instance);
    partial void UpdateShoppingTransaction(MainEntity.Models.Shopping.ShoppingTransaction instance);
    partial void DeleteShoppingTransaction(MainEntity.Models.Shopping.ShoppingTransaction instance);
    partial void Insertaspnet_User(MainEntity.Models.Shopping.aspnet_User instance);
    partial void Updateaspnet_User(MainEntity.Models.Shopping.aspnet_User instance);
    partial void Deleteaspnet_User(MainEntity.Models.Shopping.aspnet_User instance);
    partial void InsertMembershipAddress(MainEntity.Models.Shopping.MembershipAddress instance);
    partial void UpdateMembershipAddress(MainEntity.Models.Shopping.MembershipAddress instance);
    partial void DeleteMembershipAddress(MainEntity.Models.Shopping.MembershipAddress instance);
    #endregion
		
		public ShoppingEntityDataContext() : 
				base(global::MainEntity.Properties.Settings.Default.Aisha_realConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public ShoppingEntityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShoppingEntityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShoppingEntityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShoppingEntityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.SubscribePlanEntity> SubscribePlanEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.SubscribePlanEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.Membership> Memberships
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.Membership>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.ShoppingLog> ShoppingLogs
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.ShoppingLog>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.MembershipXrefSubscribePlan> MembershipXrefSubscribePlans
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.MembershipXrefSubscribePlan>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.ProductEntity> ProductEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.ProductEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.EntityItem> EntityItems
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.EntityItem>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.ProductXrefEntity> ProductXrefEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.ProductXrefEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.ShoppingMembershipAddress> ShoppingMembershipAddresses
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.ShoppingMembershipAddress>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.ShoppingState> ShoppingStates
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.ShoppingState>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.EntityType> EntityTypes
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.EntityType>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.Shopping> Shoppings
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.Shopping>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.ProductType> ProductTypes
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.ProductType>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.ClassEntity> ClassEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.ClassEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.SpeakerEntity> SpeakerEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.SpeakerEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.CatalogItemExtend> CatalogItemExtends
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.CatalogItemExtend>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.ShoppingClass> ShoppingClasses
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.ShoppingClass>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.ShoppingCartPayment> ShoppingCartPayments
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.ShoppingCartPayment>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.ShoppingTransaction> ShoppingTransactions
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.ShoppingTransaction>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.UserShoppingTransaction> UserShoppingTransactions
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.UserShoppingTransaction>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Shopping.MembershipAddress> MembershipAddresses
		{
			get
			{
				return this.GetTable<MainEntity.Models.Shopping.MembershipAddress>();
			}
		}
	}
}
namespace MainEntity.Models.Shopping
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubscribePlanEntity")]
	public partial class SubscribePlanEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _subscribePlanID;
		
		private short _durationInDays;
		
		private short _durationInMonths;
		
		private int _freeUnitsOnSubscribe;
		
		private int _freeOfferCnt;
		
		private string _description;
		
		private EntitySet<MembershipXrefSubscribePlan> _MembershipXrefSubscribePlans;
		
		private EntityRef<EntityItem> _EntityItem;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsubscribePlanIDChanging(long value);
    partial void OnsubscribePlanIDChanged();
    partial void OndurationInDaysChanging(short value);
    partial void OndurationInDaysChanged();
    partial void OndurationInMonthsChanging(short value);
    partial void OndurationInMonthsChanged();
    partial void OnfreeUnitsOnSubscribeChanging(int value);
    partial void OnfreeUnitsOnSubscribeChanged();
    partial void OnfreeOfferCntChanging(int value);
    partial void OnfreeOfferCntChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public SubscribePlanEntity()
		{
			this._MembershipXrefSubscribePlans = new EntitySet<MembershipXrefSubscribePlan>(new Action<MembershipXrefSubscribePlan>(this.attach_MembershipXrefSubscribePlans), new Action<MembershipXrefSubscribePlan>(this.detach_MembershipXrefSubscribePlans));
			this._EntityItem = default(EntityRef<EntityItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscribePlanID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long subscribePlanID
		{
			get
			{
				return this._subscribePlanID;
			}
			set
			{
				if ((this._subscribePlanID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubscribePlanIDChanging(value);
					this.SendPropertyChanging();
					this._subscribePlanID = value;
					this.SendPropertyChanged("subscribePlanID");
					this.OnsubscribePlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durationInDays", DbType="SmallInt NOT NULL")]
		public short durationInDays
		{
			get
			{
				return this._durationInDays;
			}
			set
			{
				if ((this._durationInDays != value))
				{
					this.OndurationInDaysChanging(value);
					this.SendPropertyChanging();
					this._durationInDays = value;
					this.SendPropertyChanged("durationInDays");
					this.OndurationInDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durationInMonths", DbType="SmallInt NOT NULL")]
		public short durationInMonths
		{
			get
			{
				return this._durationInMonths;
			}
			set
			{
				if ((this._durationInMonths != value))
				{
					this.OndurationInMonthsChanging(value);
					this.SendPropertyChanging();
					this._durationInMonths = value;
					this.SendPropertyChanged("durationInMonths");
					this.OndurationInMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_freeUnitsOnSubscribe", DbType="Int NOT NULL")]
		public int freeUnitsOnSubscribe
		{
			get
			{
				return this._freeUnitsOnSubscribe;
			}
			set
			{
				if ((this._freeUnitsOnSubscribe != value))
				{
					this.OnfreeUnitsOnSubscribeChanging(value);
					this.SendPropertyChanging();
					this._freeUnitsOnSubscribe = value;
					this.SendPropertyChanged("freeUnitsOnSubscribe");
					this.OnfreeUnitsOnSubscribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_freeOfferCnt", DbType="Int NOT NULL")]
		public int freeOfferCnt
		{
			get
			{
				return this._freeOfferCnt;
			}
			set
			{
				if ((this._freeOfferCnt != value))
				{
					this.OnfreeOfferCntChanging(value);
					this.SendPropertyChanging();
					this._freeOfferCnt = value;
					this.SendPropertyChanged("freeOfferCnt");
					this.OnfreeOfferCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1024)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscribePlanEntity_MembershipXrefSubscribePlan", Storage="_MembershipXrefSubscribePlans", ThisKey="subscribePlanID", OtherKey="subscribePlanID")]
		public EntitySet<MembershipXrefSubscribePlan> MembershipXrefSubscribePlans
		{
			get
			{
				return this._MembershipXrefSubscribePlans;
			}
			set
			{
				this._MembershipXrefSubscribePlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_SubscribePlanEntity", Storage="_EntityItem", ThisKey="subscribePlanID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.SubscribePlanEntity = null;
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.SubscribePlanEntity = this;
						this._subscribePlanID = value.entityID;
					}
					else
					{
						this._subscribePlanID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MembershipXrefSubscribePlans(MembershipXrefSubscribePlan entity)
		{
			this.SendPropertyChanging();
			entity.SubscribePlanEntity = this;
		}
		
		private void detach_MembershipXrefSubscribePlans(MembershipXrefSubscribePlan entity)
		{
			this.SendPropertyChanging();
			entity.SubscribePlanEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Membership")]
	public partial class Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private bool _activatedCart;
		
		private System.Nullable<System.DateTime> _activationCartDate;
		
		private decimal _balance;
		
		private string _firstName;
		
		private string _lastName;
		
		private int _freeOfferCnt;
		
		private string _refferedBy;
		
		private string _country;
		
		private string _postalCode;
		
		private string _state;
		
		private string _city;
		
		private string _postalAdderss;
		
		private string _phone;
		
		private string _dayPhone;
		
		private System.Nullable<System.DateTime> _subscribeActivation;
		
		private System.Nullable<byte> _chargeDay;
		
		private bool _suspended;
		
		private bool _fullLibraryAccess;
		
		private EntityRef<MembershipXrefSubscribePlan> _MembershipXrefSubscribePlan;
		
		private EntitySet<MembershipAddress> _MembershipAddresses;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnactivatedCartChanging(bool value);
    partial void OnactivatedCartChanged();
    partial void OnactivationCartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnactivationCartDateChanged();
    partial void OnbalanceChanging(decimal value);
    partial void OnbalanceChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnfreeOfferCntChanging(int value);
    partial void OnfreeOfferCntChanged();
    partial void OnrefferedByChanging(string value);
    partial void OnrefferedByChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpostalAdderssChanging(string value);
    partial void OnpostalAdderssChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OndayPhoneChanging(string value);
    partial void OndayPhoneChanged();
    partial void OnsubscribeActivationChanging(System.Nullable<System.DateTime> value);
    partial void OnsubscribeActivationChanged();
    partial void OnchargeDayChanging(System.Nullable<byte> value);
    partial void OnchargeDayChanged();
    partial void OnsuspendedChanging(bool value);
    partial void OnsuspendedChanged();
    partial void OnfullLibraryAccessChanging(bool value);
    partial void OnfullLibraryAccessChanged();
    #endregion
		
		public Membership()
		{
			this._MembershipXrefSubscribePlan = default(EntityRef<MembershipXrefSubscribePlan>);
			this._MembershipAddresses = new EntitySet<MembershipAddress>(new Action<MembershipAddress>(this.attach_MembershipAddresses), new Action<MembershipAddress>(this.detach_MembershipAddresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activatedCart", DbType="Bit NOT NULL")]
		public bool activatedCart
		{
			get
			{
				return this._activatedCart;
			}
			set
			{
				if ((this._activatedCart != value))
				{
					this.OnactivatedCartChanging(value);
					this.SendPropertyChanging();
					this._activatedCart = value;
					this.SendPropertyChanged("activatedCart");
					this.OnactivatedCartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activationCartDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> activationCartDate
		{
			get
			{
				return this._activationCartDate;
			}
			set
			{
				if ((this._activationCartDate != value))
				{
					this.OnactivationCartDateChanging(value);
					this.SendPropertyChanging();
					this._activationCartDate = value;
					this.SendPropertyChanged("activationCartDate");
					this.OnactivationCartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Money NOT NULL")]
		public decimal balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(256)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(256)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_freeOfferCnt", DbType="Int NOT NULL")]
		public int freeOfferCnt
		{
			get
			{
				return this._freeOfferCnt;
			}
			set
			{
				if ((this._freeOfferCnt != value))
				{
					this.OnfreeOfferCntChanging(value);
					this.SendPropertyChanging();
					this._freeOfferCnt = value;
					this.SendPropertyChanged("freeOfferCnt");
					this.OnfreeOfferCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_refferedBy", DbType="NVarChar(256)")]
		public string refferedBy
		{
			get
			{
				return this._refferedBy;
			}
			set
			{
				if ((this._refferedBy != value))
				{
					this.OnrefferedByChanging(value);
					this.SendPropertyChanging();
					this._refferedBy = value;
					this.SendPropertyChanged("refferedBy");
					this.OnrefferedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(256)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="NVarChar(64)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(16)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(256)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalAdderss", DbType="NVarChar(256)")]
		public string postalAdderss
		{
			get
			{
				return this._postalAdderss;
			}
			set
			{
				if ((this._postalAdderss != value))
				{
					this.OnpostalAdderssChanging(value);
					this.SendPropertyChanging();
					this._postalAdderss = value;
					this.SendPropertyChanged("postalAdderss");
					this.OnpostalAdderssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(256)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dayPhone", DbType="NVarChar(256)")]
		public string dayPhone
		{
			get
			{
				return this._dayPhone;
			}
			set
			{
				if ((this._dayPhone != value))
				{
					this.OndayPhoneChanging(value);
					this.SendPropertyChanging();
					this._dayPhone = value;
					this.SendPropertyChanged("dayPhone");
					this.OndayPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscribeActivation", DbType="DateTime")]
		public System.Nullable<System.DateTime> subscribeActivation
		{
			get
			{
				return this._subscribeActivation;
			}
			set
			{
				if ((this._subscribeActivation != value))
				{
					this.OnsubscribeActivationChanging(value);
					this.SendPropertyChanging();
					this._subscribeActivation = value;
					this.SendPropertyChanged("subscribeActivation");
					this.OnsubscribeActivationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chargeDay", DbType="TinyInt")]
		public System.Nullable<byte> chargeDay
		{
			get
			{
				return this._chargeDay;
			}
			set
			{
				if ((this._chargeDay != value))
				{
					this.OnchargeDayChanging(value);
					this.SendPropertyChanging();
					this._chargeDay = value;
					this.SendPropertyChanged("chargeDay");
					this.OnchargeDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suspended", DbType="Bit NOT NULL")]
		public bool suspended
		{
			get
			{
				return this._suspended;
			}
			set
			{
				if ((this._suspended != value))
				{
					this.OnsuspendedChanging(value);
					this.SendPropertyChanging();
					this._suspended = value;
					this.SendPropertyChanged("suspended");
					this.OnsuspendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullLibraryAccess", DbType="Bit NO NULL")]
		public bool fullLibraryAccess
		{
			get
			{
				return this._fullLibraryAccess;
			}
			set
			{
				if ((this._fullLibraryAccess != value))
				{
					this.OnfullLibraryAccessChanging(value);
					this.SendPropertyChanging();
					this._fullLibraryAccess = value;
					this.SendPropertyChanged("fullLibraryAccess");
					this.OnfullLibraryAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MembershipXrefSubscribePlan", Storage="_MembershipXrefSubscribePlan", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public MembershipXrefSubscribePlan MembershipXrefSubscribePlan
		{
			get
			{
				return this._MembershipXrefSubscribePlan.Entity;
			}
			set
			{
				MembershipXrefSubscribePlan previousValue = this._MembershipXrefSubscribePlan.Entity;
				if (((previousValue != value) 
							|| (this._MembershipXrefSubscribePlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MembershipXrefSubscribePlan.Entity = null;
						previousValue.Membership = null;
					}
					this._MembershipXrefSubscribePlan.Entity = value;
					if ((value != null))
					{
						value.Membership = this;
					}
					this.SendPropertyChanged("MembershipXrefSubscribePlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MembershipAddress", Storage="_MembershipAddresses", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<MembershipAddress> MembershipAddresses
		{
			get
			{
				return this._MembershipAddresses;
			}
			set
			{
				this._MembershipAddresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MembershipAddresses(MembershipAddress entity)
		{
			this.SendPropertyChanging();
			entity.Membership = this;
		}
		
		private void detach_MembershipAddresses(MembershipAddress entity)
		{
			this.SendPropertyChanging();
			entity.Membership = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingLog")]
	public partial class ShoppingLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _shoppingLogID;
		
		private long _shoppingID;
		
		private short _shoppingStateID;
		
		private System.DateTime _createDate;
		
		private EntityRef<ShoppingState> _ShoppingState;
		
		private EntityRef<Shopping> _Shopping;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnshoppingLogIDChanging(long value);
    partial void OnshoppingLogIDChanged();
    partial void OnshoppingIDChanging(long value);
    partial void OnshoppingIDChanged();
    partial void OnshoppingStateIDChanging(short value);
    partial void OnshoppingStateIDChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    #endregion
		
		public ShoppingLog()
		{
			this._ShoppingState = default(EntityRef<ShoppingState>);
			this._Shopping = default(EntityRef<Shopping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingLogID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long shoppingLogID
		{
			get
			{
				return this._shoppingLogID;
			}
			set
			{
				if ((this._shoppingLogID != value))
				{
					this.OnshoppingLogIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingLogID = value;
					this.SendPropertyChanged("shoppingLogID");
					this.OnshoppingLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingID", DbType="BigInt NOT NULL")]
		public long shoppingID
		{
			get
			{
				return this._shoppingID;
			}
			set
			{
				if ((this._shoppingID != value))
				{
					if (this._Shopping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshoppingIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingID = value;
					this.SendPropertyChanged("shoppingID");
					this.OnshoppingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingStateID", DbType="SmallInt NOT NULL")]
		public short shoppingStateID
		{
			get
			{
				return this._shoppingStateID;
			}
			set
			{
				if ((this._shoppingStateID != value))
				{
					if (this._ShoppingState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshoppingStateIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingStateID = value;
					this.SendPropertyChanged("shoppingStateID");
					this.OnshoppingStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingState_ShoppingLog", Storage="_ShoppingState", ThisKey="shoppingStateID", OtherKey="shoppingStateID", IsForeignKey=true)]
		public ShoppingState ShoppingState
		{
			get
			{
				return this._ShoppingState.Entity;
			}
			set
			{
				ShoppingState previousValue = this._ShoppingState.Entity;
				if (((previousValue != value) 
							|| (this._ShoppingState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShoppingState.Entity = null;
						previousValue.ShoppingLogs.Remove(this);
					}
					this._ShoppingState.Entity = value;
					if ((value != null))
					{
						value.ShoppingLogs.Add(this);
						this._shoppingStateID = value.shoppingStateID;
					}
					else
					{
						this._shoppingStateID = default(short);
					}
					this.SendPropertyChanged("ShoppingState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shopping_ShoppingLog", Storage="_Shopping", ThisKey="shoppingID", OtherKey="shoppingID", IsForeignKey=true)]
		public Shopping Shopping
		{
			get
			{
				return this._Shopping.Entity;
			}
			set
			{
				Shopping previousValue = this._Shopping.Entity;
				if (((previousValue != value) 
							|| (this._Shopping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shopping.Entity = null;
						previousValue.ShoppingLogs.Remove(this);
					}
					this._Shopping.Entity = value;
					if ((value != null))
					{
						value.ShoppingLogs.Add(this);
						this._shoppingID = value.shoppingID;
					}
					else
					{
						this._shoppingID = default(long);
					}
					this.SendPropertyChanged("Shopping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembershipXrefSubscribePlan")]
	public partial class MembershipXrefSubscribePlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private long _subscribePlanID;
		
		private System.Nullable<System.DateTime> _startSubscribeDate;
		
		private System.Nullable<System.DateTime> _endSubscribeDate;
		
		private bool _cancelSubscribe;
		
		private System.Nullable<System.DateTime> _activationDate;
		
		private bool _declineSubscribe;
		
		private EntityRef<SubscribePlanEntity> _SubscribePlanEntity;
		
		private EntityRef<Membership> _Membership;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnsubscribePlanIDChanging(long value);
    partial void OnsubscribePlanIDChanged();
    partial void OnstartSubscribeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnstartSubscribeDateChanged();
    partial void OnendSubscribeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnendSubscribeDateChanged();
    partial void OncancelSubscribeChanging(bool value);
    partial void OncancelSubscribeChanged();
    partial void OnactivationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnactivationDateChanged();
    partial void OndeclineSubscribeChanging(bool value);
    partial void OndeclineSubscribeChanged();
    #endregion
		
		public MembershipXrefSubscribePlan()
		{
			this._SubscribePlanEntity = default(EntityRef<SubscribePlanEntity>);
			this._Membership = default(EntityRef<Membership>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscribePlanID", DbType="BigInt NOT NULL")]
		public long subscribePlanID
		{
			get
			{
				return this._subscribePlanID;
			}
			set
			{
				if ((this._subscribePlanID != value))
				{
					if (this._SubscribePlanEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubscribePlanIDChanging(value);
					this.SendPropertyChanging();
					this._subscribePlanID = value;
					this.SendPropertyChanged("subscribePlanID");
					this.OnsubscribePlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startSubscribeDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> startSubscribeDate
		{
			get
			{
				return this._startSubscribeDate;
			}
			set
			{
				if ((this._startSubscribeDate != value))
				{
					this.OnstartSubscribeDateChanging(value);
					this.SendPropertyChanging();
					this._startSubscribeDate = value;
					this.SendPropertyChanged("startSubscribeDate");
					this.OnstartSubscribeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endSubscribeDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> endSubscribeDate
		{
			get
			{
				return this._endSubscribeDate;
			}
			set
			{
				if ((this._endSubscribeDate != value))
				{
					this.OnendSubscribeDateChanging(value);
					this.SendPropertyChanging();
					this._endSubscribeDate = value;
					this.SendPropertyChanged("endSubscribeDate");
					this.OnendSubscribeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelSubscribe", DbType="Bit NOT NULL")]
		public bool cancelSubscribe
		{
			get
			{
				return this._cancelSubscribe;
			}
			set
			{
				if ((this._cancelSubscribe != value))
				{
					this.OncancelSubscribeChanging(value);
					this.SendPropertyChanging();
					this._cancelSubscribe = value;
					this.SendPropertyChanged("cancelSubscribe");
					this.OncancelSubscribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> activationDate
		{
			get
			{
				return this._activationDate;
			}
			set
			{
				if ((this._activationDate != value))
				{
					this.OnactivationDateChanging(value);
					this.SendPropertyChanging();
					this._activationDate = value;
					this.SendPropertyChanged("activationDate");
					this.OnactivationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_declineSubscribe", DbType="Bit NOT NULL")]
		public bool declineSubscribe
		{
			get
			{
				return this._declineSubscribe;
			}
			set
			{
				if ((this._declineSubscribe != value))
				{
					this.OndeclineSubscribeChanging(value);
					this.SendPropertyChanging();
					this._declineSubscribe = value;
					this.SendPropertyChanged("declineSubscribe");
					this.OndeclineSubscribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscribePlanEntity_MembershipXrefSubscribePlan", Storage="_SubscribePlanEntity", ThisKey="subscribePlanID", OtherKey="subscribePlanID", IsForeignKey=true)]
		public SubscribePlanEntity SubscribePlanEntity
		{
			get
			{
				return this._SubscribePlanEntity.Entity;
			}
			set
			{
				SubscribePlanEntity previousValue = this._SubscribePlanEntity.Entity;
				if (((previousValue != value) 
							|| (this._SubscribePlanEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubscribePlanEntity.Entity = null;
						previousValue.MembershipXrefSubscribePlans.Remove(this);
					}
					this._SubscribePlanEntity.Entity = value;
					if ((value != null))
					{
						value.MembershipXrefSubscribePlans.Add(this);
						this._subscribePlanID = value.subscribePlanID;
					}
					else
					{
						this._subscribePlanID = default(long);
					}
					this.SendPropertyChanged("SubscribePlanEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MembershipXrefSubscribePlan", Storage="_Membership", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.MembershipXrefSubscribePlan = null;
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.MembershipXrefSubscribePlan = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductEntity")]
	public partial class ProductEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _productID;
		
		private short _productTypeID;
		
		private System.Nullable<decimal> _price1;
		
		private System.Nullable<decimal> _price2;
		
		private string _description;
		
		private bool _unlimitedAccessInLibrary;
		
		private EntitySet<ProductXrefEntity> _ProductXrefEntities;
		
		private EntityRef<EntityItem> _EntityItem;
		
		private EntityRef<ProductType> _ProductType;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIDChanging(long value);
    partial void OnproductIDChanged();
    partial void OnproductTypeIDChanging(short value);
    partial void OnproductTypeIDChanged();
    partial void Onprice1Changing(System.Nullable<decimal> value);
    partial void Onprice1Changed();
    partial void Onprice2Changing(System.Nullable<decimal> value);
    partial void Onprice2Changed();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnunlimitedAccessInLibraryChanging(bool value);
    partial void OnunlimitedAccessInLibraryChanged();
    #endregion
		
		public ProductEntity()
		{
			this._ProductXrefEntities = new EntitySet<ProductXrefEntity>(new Action<ProductXrefEntity>(this.attach_ProductXrefEntities), new Action<ProductXrefEntity>(this.detach_ProductXrefEntities));
			this._EntityItem = default(EntityRef<EntityItem>);
			this._ProductType = default(EntityRef<ProductType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productTypeID", DbType="SmallInt NOT NULL")]
		public short productTypeID
		{
			get
			{
				return this._productTypeID;
			}
			set
			{
				if ((this._productTypeID != value))
				{
					if (this._ProductType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductTypeIDChanging(value);
					this.SendPropertyChanging();
					this._productTypeID = value;
					this.SendPropertyChanged("productTypeID");
					this.OnproductTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price1", DbType="Money")]
		public System.Nullable<decimal> price1
		{
			get
			{
				return this._price1;
			}
			set
			{
				if ((this._price1 != value))
				{
					this.Onprice1Changing(value);
					this.SendPropertyChanging();
					this._price1 = value;
					this.SendPropertyChanged("price1");
					this.Onprice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price2", DbType="Money")]
		public System.Nullable<decimal> price2
		{
			get
			{
				return this._price2;
			}
			set
			{
				if ((this._price2 != value))
				{
					this.Onprice2Changing(value);
					this.SendPropertyChanging();
					this._price2 = value;
					this.SendPropertyChanged("price2");
					this.Onprice2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unlimitedAccessInLibrary", DbType="Bit NO NULL")]
		public bool unlimitedAccessInLibrary
		{
			get
			{
				return this._unlimitedAccessInLibrary;
			}
			set
			{
				if ((this._unlimitedAccessInLibrary != value))
				{
					this.OnunlimitedAccessInLibraryChanging(value);
					this.SendPropertyChanging();
					this._unlimitedAccessInLibrary = value;
					this.SendPropertyChanged("unlimitedAccessInLibrary");
					this.OnunlimitedAccessInLibraryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductEntity_ProductXrefEntity", Storage="_ProductXrefEntities", ThisKey="productID", OtherKey="productID")]
		public EntitySet<ProductXrefEntity> ProductXrefEntities
		{
			get
			{
				return this._ProductXrefEntities;
			}
			set
			{
				this._ProductXrefEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ProductEntity", Storage="_EntityItem", ThisKey="productID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.ProductEntity = null;
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.ProductEntity = this;
						this._productID = value.entityID;
					}
					else
					{
						this._productID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_ProductEntity", Storage="_ProductType", ThisKey="productTypeID", OtherKey="productTypeID", IsForeignKey=true)]
		public ProductType ProductType
		{
			get
			{
				return this._ProductType.Entity;
			}
			set
			{
				ProductType previousValue = this._ProductType.Entity;
				if (((previousValue != value) 
							|| (this._ProductType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductType.Entity = null;
						previousValue.ProductEntities.Remove(this);
					}
					this._ProductType.Entity = value;
					if ((value != null))
					{
						value.ProductEntities.Add(this);
						this._productTypeID = value.productTypeID;
					}
					else
					{
						this._productTypeID = default(short);
					}
					this.SendPropertyChanged("ProductType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductXrefEntities(ProductXrefEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductEntity = this;
		}
		
		private void detach_ProductXrefEntities(ProductXrefEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityItem")]
	public partial class EntityItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _entityID;
		
		private long _rootEntityID;
		
		private long _parentEntityID;
		
		private int _typeID;
		
		private System.Guid _creatorID;
		
		private string _hierarchiID;
		
		private string _title;
		
		private int _sortOrder;
		
		private System.DateTime _createDate;
		
		private bool _deleted;
		
		private bool _active;
		
		private EntityRef<SubscribePlanEntity> _SubscribePlanEntity;
		
		private EntityRef<ProductEntity> _ProductEntity;
		
		private EntitySet<ProductXrefEntity> _ProductXrefEntities;
		
		private EntitySet<Shopping> _Shoppings;
		
		private EntityRef<ClassEntity> _ClassEntity;
		
		private EntityRef<SpeakerEntity> _SpeakerEntity;
		
		private EntityRef<CatalogItemExtend> _CatalogItemExtend;
		
		private EntityRef<EntityType> _EntityType;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnentityIDChanging(long value);
    partial void OnentityIDChanged();
    partial void OnrootEntityIDChanging(long value);
    partial void OnrootEntityIDChanged();
    partial void OnparentEntityIDChanging(long value);
    partial void OnparentEntityIDChanged();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OncreatorIDChanging(System.Guid value);
    partial void OncreatorIDChanged();
    partial void OnhierarchiIDChanging(string value);
    partial void OnhierarchiIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnsortOrderChanging(int value);
    partial void OnsortOrderChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public EntityItem()
		{
			this._SubscribePlanEntity = default(EntityRef<SubscribePlanEntity>);
			this._ProductEntity = default(EntityRef<ProductEntity>);
			this._ProductXrefEntities = new EntitySet<ProductXrefEntity>(new Action<ProductXrefEntity>(this.attach_ProductXrefEntities), new Action<ProductXrefEntity>(this.detach_ProductXrefEntities));
			this._Shoppings = new EntitySet<Shopping>(new Action<Shopping>(this.attach_Shoppings), new Action<Shopping>(this.detach_Shoppings));
			this._ClassEntity = default(EntityRef<ClassEntity>);
			this._SpeakerEntity = default(EntityRef<SpeakerEntity>);
			this._CatalogItemExtend = default(EntityRef<CatalogItemExtend>);
			this._EntityType = default(EntityRef<EntityType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entityID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long entityID
		{
			get
			{
				return this._entityID;
			}
			set
			{
				if ((this._entityID != value))
				{
					this.OnentityIDChanging(value);
					this.SendPropertyChanging();
					this._entityID = value;
					this.SendPropertyChanged("entityID");
					this.OnentityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rootEntityID", DbType="BigInt NOT NULL")]
		public long rootEntityID
		{
			get
			{
				return this._rootEntityID;
			}
			set
			{
				if ((this._rootEntityID != value))
				{
					this.OnrootEntityIDChanging(value);
					this.SendPropertyChanging();
					this._rootEntityID = value;
					this.SendPropertyChanged("rootEntityID");
					this.OnrootEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentEntityID", DbType="BigInt NOT NULL")]
		public long parentEntityID
		{
			get
			{
				return this._parentEntityID;
			}
			set
			{
				if ((this._parentEntityID != value))
				{
					this.OnparentEntityIDChanging(value);
					this.SendPropertyChanging();
					this._parentEntityID = value;
					this.SendPropertyChanged("parentEntityID");
					this.OnparentEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL")]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					if (this._EntityType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creatorID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid creatorID
		{
			get
			{
				return this._creatorID;
			}
			set
			{
				if ((this._creatorID != value))
				{
					this.OncreatorIDChanging(value);
					this.SendPropertyChanging();
					this._creatorID = value;
					this.SendPropertyChanged("creatorID");
					this.OncreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hierarchiID", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string hierarchiID
		{
			get
			{
				return this._hierarchiID;
			}
			set
			{
				if ((this._hierarchiID != value))
				{
					this.OnhierarchiIDChanging(value);
					this.SendPropertyChanging();
					this._hierarchiID = value;
					this.SendPropertyChanged("hierarchiID");
					this.OnhierarchiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortOrder", DbType="Int NOT NULL")]
		public int sortOrder
		{
			get
			{
				return this._sortOrder;
			}
			set
			{
				if ((this._sortOrder != value))
				{
					this.OnsortOrderChanging(value);
					this.SendPropertyChanging();
					this._sortOrder = value;
					this.SendPropertyChanged("sortOrder");
					this.OnsortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_SubscribePlanEntity", Storage="_SubscribePlanEntity", ThisKey="entityID", OtherKey="subscribePlanID", IsUnique=true, IsForeignKey=false)]
		public SubscribePlanEntity SubscribePlanEntity
		{
			get
			{
				return this._SubscribePlanEntity.Entity;
			}
			set
			{
				SubscribePlanEntity previousValue = this._SubscribePlanEntity.Entity;
				if (((previousValue != value) 
							|| (this._SubscribePlanEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubscribePlanEntity.Entity = null;
						previousValue.EntityItem = null;
					}
					this._SubscribePlanEntity.Entity = value;
					if ((value != null))
					{
						value.EntityItem = this;
					}
					this.SendPropertyChanged("SubscribePlanEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ProductEntity", Storage="_ProductEntity", ThisKey="entityID", OtherKey="productID", IsUnique=true, IsForeignKey=false)]
		public ProductEntity ProductEntity
		{
			get
			{
				return this._ProductEntity.Entity;
			}
			set
			{
				ProductEntity previousValue = this._ProductEntity.Entity;
				if (((previousValue != value) 
							|| (this._ProductEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductEntity.Entity = null;
						previousValue.EntityItem = null;
					}
					this._ProductEntity.Entity = value;
					if ((value != null))
					{
						value.EntityItem = this;
					}
					this.SendPropertyChanged("ProductEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ProductXrefEntity", Storage="_ProductXrefEntities", ThisKey="entityID", OtherKey="entityID")]
		public EntitySet<ProductXrefEntity> ProductXrefEntities
		{
			get
			{
				return this._ProductXrefEntities;
			}
			set
			{
				this._ProductXrefEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_Shopping", Storage="_Shoppings", ThisKey="entityID", OtherKey="entityID")]
		public EntitySet<Shopping> Shoppings
		{
			get
			{
				return this._Shoppings;
			}
			set
			{
				this._Shoppings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ClassEntity", Storage="_ClassEntity", ThisKey="entityID", OtherKey="classID", IsUnique=true, IsForeignKey=false)]
		public ClassEntity ClassEntity
		{
			get
			{
				return this._ClassEntity.Entity;
			}
			set
			{
				ClassEntity previousValue = this._ClassEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClassEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassEntity.Entity = null;
						previousValue.EntityItem = null;
					}
					this._ClassEntity.Entity = value;
					if ((value != null))
					{
						value.EntityItem = this;
					}
					this.SendPropertyChanged("ClassEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_SpeakerEntity", Storage="_SpeakerEntity", ThisKey="entityID", OtherKey="speakerID", IsUnique=true, IsForeignKey=false)]
		public SpeakerEntity SpeakerEntity
		{
			get
			{
				return this._SpeakerEntity.Entity;
			}
			set
			{
				SpeakerEntity previousValue = this._SpeakerEntity.Entity;
				if (((previousValue != value) 
							|| (this._SpeakerEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpeakerEntity.Entity = null;
						previousValue.EntityItem = null;
					}
					this._SpeakerEntity.Entity = value;
					if ((value != null))
					{
						value.EntityItem = this;
					}
					this.SendPropertyChanged("SpeakerEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_CatalogItemExtend", Storage="_CatalogItemExtend", ThisKey="entityID", OtherKey="entityID", IsUnique=true, IsForeignKey=false)]
		public CatalogItemExtend CatalogItemExtend
		{
			get
			{
				return this._CatalogItemExtend.Entity;
			}
			set
			{
				CatalogItemExtend previousValue = this._CatalogItemExtend.Entity;
				if (((previousValue != value) 
							|| (this._CatalogItemExtend.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatalogItemExtend.Entity = null;
						previousValue.EntityItem = null;
					}
					this._CatalogItemExtend.Entity = value;
					if ((value != null))
					{
						value.EntityItem = this;
					}
					this.SendPropertyChanged("CatalogItemExtend");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityType_EntityItem", Storage="_EntityType", ThisKey="typeID", OtherKey="typeID", IsForeignKey=true)]
		public EntityType EntityType
		{
			get
			{
				return this._EntityType.Entity;
			}
			set
			{
				EntityType previousValue = this._EntityType.Entity;
				if (((previousValue != value) 
							|| (this._EntityType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityType.Entity = null;
						previousValue.EntityItems.Remove(this);
					}
					this._EntityType.Entity = value;
					if ((value != null))
					{
						value.EntityItems.Add(this);
						this._typeID = value.typeID;
					}
					else
					{
						this._typeID = default(int);
					}
					this.SendPropertyChanged("EntityType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductXrefEntities(ProductXrefEntity entity)
		{
			this.SendPropertyChanging();
			entity.EntityItem = this;
		}
		
		private void detach_ProductXrefEntities(ProductXrefEntity entity)
		{
			this.SendPropertyChanging();
			entity.EntityItem = null;
		}
		
		private void attach_Shoppings(Shopping entity)
		{
			this.SendPropertyChanging();
			entity.EntityItem = this;
		}
		
		private void detach_Shoppings(Shopping entity)
		{
			this.SendPropertyChanging();
			entity.EntityItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductXrefEntity")]
	public partial class ProductXrefEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _productID;
		
		private long _entityID;
		
		private EntityRef<EntityItem> _EntityItem;
		
		private EntityRef<ProductEntity> _ProductEntity;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIDChanging(long value);
    partial void OnproductIDChanged();
    partial void OnentityIDChanging(long value);
    partial void OnentityIDChanged();
    #endregion
		
		public ProductXrefEntity()
		{
			this._EntityItem = default(EntityRef<EntityItem>);
			this._ProductEntity = default(EntityRef<ProductEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._ProductEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entityID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long entityID
		{
			get
			{
				return this._entityID;
			}
			set
			{
				if ((this._entityID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnentityIDChanging(value);
					this.SendPropertyChanging();
					this._entityID = value;
					this.SendPropertyChanged("entityID");
					this.OnentityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ProductXrefEntity", Storage="_EntityItem", ThisKey="entityID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.ProductXrefEntities.Remove(this);
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.ProductXrefEntities.Add(this);
						this._entityID = value.entityID;
					}
					else
					{
						this._entityID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductEntity_ProductXrefEntity", Storage="_ProductEntity", ThisKey="productID", OtherKey="productID", IsForeignKey=true)]
		public ProductEntity ProductEntity
		{
			get
			{
				return this._ProductEntity.Entity;
			}
			set
			{
				ProductEntity previousValue = this._ProductEntity.Entity;
				if (((previousValue != value) 
							|| (this._ProductEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductEntity.Entity = null;
						previousValue.ProductXrefEntities.Remove(this);
					}
					this._ProductEntity.Entity = value;
					if ((value != null))
					{
						value.ProductXrefEntities.Add(this);
						this._productID = value.productID;
					}
					else
					{
						this._productID = default(long);
					}
					this.SendPropertyChanged("ProductEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingMembershipAddress")]
	public partial class ShoppingMembershipAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _shoppingTransactionID;
		
		private long _addressID;
		
		private EntityRef<ShoppingTransaction> _ShoppingTransaction;
		
		private EntityRef<MembershipAddress> _MembershipAddress;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnshoppingTransactionIDChanging(long value);
    partial void OnshoppingTransactionIDChanged();
    partial void OnaddressIDChanging(long value);
    partial void OnaddressIDChanged();
    #endregion
		
		public ShoppingMembershipAddress()
		{
			this._ShoppingTransaction = default(EntityRef<ShoppingTransaction>);
			this._MembershipAddress = default(EntityRef<MembershipAddress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingTransactionID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long shoppingTransactionID
		{
			get
			{
				return this._shoppingTransactionID;
			}
			set
			{
				if ((this._shoppingTransactionID != value))
				{
					if (this._ShoppingTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshoppingTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingTransactionID = value;
					this.SendPropertyChanged("shoppingTransactionID");
					this.OnshoppingTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressID", DbType="BigInt NOT NULL")]
		public long addressID
		{
			get
			{
				return this._addressID;
			}
			set
			{
				if ((this._addressID != value))
				{
					if (this._MembershipAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaddressIDChanging(value);
					this.SendPropertyChanging();
					this._addressID = value;
					this.SendPropertyChanged("addressID");
					this.OnaddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingTransaction_ShoppingMembershipAddress", Storage="_ShoppingTransaction", ThisKey="shoppingTransactionID", OtherKey="shoppingTransactionID", IsForeignKey=true)]
		public ShoppingTransaction ShoppingTransaction
		{
			get
			{
				return this._ShoppingTransaction.Entity;
			}
			set
			{
				ShoppingTransaction previousValue = this._ShoppingTransaction.Entity;
				if (((previousValue != value) 
							|| (this._ShoppingTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShoppingTransaction.Entity = null;
						previousValue.ShoppingMembershipAddress = null;
					}
					this._ShoppingTransaction.Entity = value;
					if ((value != null))
					{
						value.ShoppingMembershipAddress = this;
						this._shoppingTransactionID = value.shoppingTransactionID;
					}
					else
					{
						this._shoppingTransactionID = default(long);
					}
					this.SendPropertyChanged("ShoppingTransaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipAddress_ShoppingMembershipAddress", Storage="_MembershipAddress", ThisKey="addressID", OtherKey="addressID", IsForeignKey=true)]
		public MembershipAddress MembershipAddress
		{
			get
			{
				return this._MembershipAddress.Entity;
			}
			set
			{
				MembershipAddress previousValue = this._MembershipAddress.Entity;
				if (((previousValue != value) 
							|| (this._MembershipAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MembershipAddress.Entity = null;
						previousValue.ShoppingMembershipAddresses.Remove(this);
					}
					this._MembershipAddress.Entity = value;
					if ((value != null))
					{
						value.ShoppingMembershipAddresses.Add(this);
						this._addressID = value.addressID;
					}
					else
					{
						this._addressID = default(long);
					}
					this.SendPropertyChanged("MembershipAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingState")]
	public partial class ShoppingState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _shoppingStateID;
		
		private string _name;
		
		private EntitySet<ShoppingLog> _ShoppingLogs;
		
		private EntitySet<Shopping> _Shoppings;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnshoppingStateIDChanging(short value);
    partial void OnshoppingStateIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public ShoppingState()
		{
			this._ShoppingLogs = new EntitySet<ShoppingLog>(new Action<ShoppingLog>(this.attach_ShoppingLogs), new Action<ShoppingLog>(this.detach_ShoppingLogs));
			this._Shoppings = new EntitySet<Shopping>(new Action<Shopping>(this.attach_Shoppings), new Action<Shopping>(this.detach_Shoppings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingStateID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short shoppingStateID
		{
			get
			{
				return this._shoppingStateID;
			}
			set
			{
				if ((this._shoppingStateID != value))
				{
					this.OnshoppingStateIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingStateID = value;
					this.SendPropertyChanged("shoppingStateID");
					this.OnshoppingStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingState_ShoppingLog", Storage="_ShoppingLogs", ThisKey="shoppingStateID", OtherKey="shoppingStateID")]
		public EntitySet<ShoppingLog> ShoppingLogs
		{
			get
			{
				return this._ShoppingLogs;
			}
			set
			{
				this._ShoppingLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingState_Shopping", Storage="_Shoppings", ThisKey="shoppingStateID", OtherKey="shoppingStateID")]
		public EntitySet<Shopping> Shoppings
		{
			get
			{
				return this._Shoppings;
			}
			set
			{
				this._Shoppings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShoppingLogs(ShoppingLog entity)
		{
			this.SendPropertyChanging();
			entity.ShoppingState = this;
		}
		
		private void detach_ShoppingLogs(ShoppingLog entity)
		{
			this.SendPropertyChanging();
			entity.ShoppingState = null;
		}
		
		private void attach_Shoppings(Shopping entity)
		{
			this.SendPropertyChanging();
			entity.ShoppingState = this;
		}
		
		private void detach_Shoppings(Shopping entity)
		{
			this.SendPropertyChanging();
			entity.ShoppingState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityType")]
	public partial class EntityType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _typeID;
		
		private string _name;
		
		private EntitySet<EntityItem> _EntityItems;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public EntityType()
		{
			this._EntityItems = new EntitySet<EntityItem>(new Action<EntityItem>(this.attach_EntityItems), new Action<EntityItem>(this.detach_EntityItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(256)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityType_EntityItem", Storage="_EntityItems", ThisKey="typeID", OtherKey="typeID")]
		public EntitySet<EntityItem> EntityItems
		{
			get
			{
				return this._EntityItems;
			}
			set
			{
				this._EntityItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityItems(EntityItem entity)
		{
			this.SendPropertyChanging();
			entity.EntityType = this;
		}
		
		private void detach_EntityItems(EntityItem entity)
		{
			this.SendPropertyChanging();
			entity.EntityType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shopping")]
	public partial class Shopping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _shoppingID;
		
		private long _entityID;
		
		private System.Guid _UserId;
		
		private short _shoppingStateID;
		
		private long _shoppingTransactionID;
		
		private decimal _price1;
		
		private bool _deleted;
		
		private decimal _price2;
		
		private int _count;
		
		private bool _unlimitedAccessInLibrary;
		
		private EntitySet<ShoppingLog> _ShoppingLogs;
		
		private EntityRef<EntityItem> _EntityItem;
		
		private EntityRef<ShoppingState> _ShoppingState;
		
		private EntityRef<ShoppingTransaction> _ShoppingTransaction;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnshoppingIDChanging(long value);
    partial void OnshoppingIDChanged();
    partial void OnentityIDChanging(long value);
    partial void OnentityIDChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnshoppingStateIDChanging(short value);
    partial void OnshoppingStateIDChanged();
    partial void OnshoppingTransactionIDChanging(long value);
    partial void OnshoppingTransactionIDChanged();
    partial void Onprice1Changing(decimal value);
    partial void Onprice1Changed();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Onprice2Changing(decimal value);
    partial void Onprice2Changed();
    partial void OncntChanging(int value);
    partial void OncntChanged();
    partial void OnunlimitedAccessInLibraryChanging(bool value);
    partial void OnunlimitedAccessInLibraryChanged();
    #endregion
		
		public Shopping()
		{
			this._ShoppingLogs = new EntitySet<ShoppingLog>(new Action<ShoppingLog>(this.attach_ShoppingLogs), new Action<ShoppingLog>(this.detach_ShoppingLogs));
			this._EntityItem = default(EntityRef<EntityItem>);
			this._ShoppingState = default(EntityRef<ShoppingState>);
			this._ShoppingTransaction = default(EntityRef<ShoppingTransaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long shoppingID
		{
			get
			{
				return this._shoppingID;
			}
			set
			{
				if ((this._shoppingID != value))
				{
					this.OnshoppingIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingID = value;
					this.SendPropertyChanged("shoppingID");
					this.OnshoppingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entityID", DbType="BigInt NOT NULL")]
		public long entityID
		{
			get
			{
				return this._entityID;
			}
			set
			{
				if ((this._entityID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnentityIDChanging(value);
					this.SendPropertyChanging();
					this._entityID = value;
					this.SendPropertyChanged("entityID");
					this.OnentityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingStateID", DbType="SmallInt NOT NULL")]
		public short shoppingStateID
		{
			get
			{
				return this._shoppingStateID;
			}
			set
			{
				if ((this._shoppingStateID != value))
				{
					if (this._ShoppingState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshoppingStateIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingStateID = value;
					this.SendPropertyChanged("shoppingStateID");
					this.OnshoppingStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingTransactionID", DbType="BigInt NOT NULL")]
		public long shoppingTransactionID
		{
			get
			{
				return this._shoppingTransactionID;
			}
			set
			{
				if ((this._shoppingTransactionID != value))
				{
					if (this._ShoppingTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshoppingTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingTransactionID = value;
					this.SendPropertyChanged("shoppingTransactionID");
					this.OnshoppingTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price1", DbType="Money NOT NULL")]
		public decimal price1
		{
			get
			{
				return this._price1;
			}
			set
			{
				if ((this._price1 != value))
				{
					this.Onprice1Changing(value);
					this.SendPropertyChanging();
					this._price1 = value;
					this.SendPropertyChanged("price1");
					this.Onprice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price2", DbType="Money NOT NULL")]
		public decimal price2
		{
			get
			{
				return this._price2;
			}
			set
			{
				if ((this._price2 != value))
				{
					this.Onprice2Changing(value);
					this.SendPropertyChanging();
					this._price2 = value;
					this.SendPropertyChanged("price2");
					this.Onprice2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[count]", Storage="_count", DbType="Int NOT NULL")]
		public int cnt
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncntChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("cnt");
					this.OncntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unlimitedAccessInLibrary", DbType="Bit NO NULL")]
		public bool unlimitedAccessInLibrary
		{
			get
			{
				return this._unlimitedAccessInLibrary;
			}
			set
			{
				if ((this._unlimitedAccessInLibrary != value))
				{
					this.OnunlimitedAccessInLibraryChanging(value);
					this.SendPropertyChanging();
					this._unlimitedAccessInLibrary = value;
					this.SendPropertyChanged("unlimitedAccessInLibrary");
					this.OnunlimitedAccessInLibraryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shopping_ShoppingLog", Storage="_ShoppingLogs", ThisKey="shoppingID", OtherKey="shoppingID")]
		public EntitySet<ShoppingLog> ShoppingLogs
		{
			get
			{
				return this._ShoppingLogs;
			}
			set
			{
				this._ShoppingLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_Shopping", Storage="_EntityItem", ThisKey="entityID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.Shoppings.Remove(this);
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.Shoppings.Add(this);
						this._entityID = value.entityID;
					}
					else
					{
						this._entityID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingState_Shopping", Storage="_ShoppingState", ThisKey="shoppingStateID", OtherKey="shoppingStateID", IsForeignKey=true)]
		public ShoppingState ShoppingState
		{
			get
			{
				return this._ShoppingState.Entity;
			}
			set
			{
				ShoppingState previousValue = this._ShoppingState.Entity;
				if (((previousValue != value) 
							|| (this._ShoppingState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShoppingState.Entity = null;
						previousValue.Shoppings.Remove(this);
					}
					this._ShoppingState.Entity = value;
					if ((value != null))
					{
						value.Shoppings.Add(this);
						this._shoppingStateID = value.shoppingStateID;
					}
					else
					{
						this._shoppingStateID = default(short);
					}
					this.SendPropertyChanged("ShoppingState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingTransaction_Shopping", Storage="_ShoppingTransaction", ThisKey="shoppingTransactionID", OtherKey="shoppingTransactionID", IsForeignKey=true)]
		public ShoppingTransaction ShoppingTransaction
		{
			get
			{
				return this._ShoppingTransaction.Entity;
			}
			set
			{
				ShoppingTransaction previousValue = this._ShoppingTransaction.Entity;
				if (((previousValue != value) 
							|| (this._ShoppingTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShoppingTransaction.Entity = null;
						previousValue.Shoppings.Remove(this);
					}
					this._ShoppingTransaction.Entity = value;
					if ((value != null))
					{
						value.Shoppings.Add(this);
						this._shoppingTransactionID = value.shoppingTransactionID;
					}
					else
					{
						this._shoppingTransactionID = default(long);
					}
					this.SendPropertyChanged("ShoppingTransaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShoppingLogs(ShoppingLog entity)
		{
			this.SendPropertyChanging();
			entity.Shopping = this;
		}
		
		private void detach_ShoppingLogs(ShoppingLog entity)
		{
			this.SendPropertyChanging();
			entity.Shopping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductType")]
	public partial class ProductType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _productTypeID;
		
		private string _name;
		
		private EntitySet<ProductEntity> _ProductEntities;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductTypeIDChanging(short value);
    partial void OnproductTypeIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public ProductType()
		{
			this._ProductEntities = new EntitySet<ProductEntity>(new Action<ProductEntity>(this.attach_ProductEntities), new Action<ProductEntity>(this.detach_ProductEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productTypeID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short productTypeID
		{
			get
			{
				return this._productTypeID;
			}
			set
			{
				if ((this._productTypeID != value))
				{
					this.OnproductTypeIDChanging(value);
					this.SendPropertyChanging();
					this._productTypeID = value;
					this.SendPropertyChanged("productTypeID");
					this.OnproductTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(256)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_ProductEntity", Storage="_ProductEntities", ThisKey="productTypeID", OtherKey="productTypeID")]
		public EntitySet<ProductEntity> ProductEntities
		{
			get
			{
				return this._ProductEntities;
			}
			set
			{
				this._ProductEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductEntities(ProductEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = this;
		}
		
		private void detach_ProductEntities(ProductEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassEntity")]
	public partial class ClassEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _classID;
		
		private long _speakerID;
		
		private string _description;
		
		private System.Nullable<System.TimeSpan> _duration;
		
		private int _statDownloadCnt;
		
		private int _statListenCnt;
		
		private EntityRef<EntityItem> _EntityItem;
		
		private EntityRef<SpeakerEntity> _SpeakerEntity;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclassIDChanging(long value);
    partial void OnclassIDChanged();
    partial void OnspeakerIDChanging(long value);
    partial void OnspeakerIDChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndurationChanging(System.Nullable<System.TimeSpan> value);
    partial void OndurationChanged();
    partial void OnstatDownloadCntChanging(int value);
    partial void OnstatDownloadCntChanged();
    partial void OnstatListenCntChanging(int value);
    partial void OnstatListenCntChanged();
    #endregion
		
		public ClassEntity()
		{
			this._EntityItem = default(EntityRef<EntityItem>);
			this._SpeakerEntity = default(EntityRef<SpeakerEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long classID
		{
			get
			{
				return this._classID;
			}
			set
			{
				if ((this._classID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnclassIDChanging(value);
					this.SendPropertyChanging();
					this._classID = value;
					this.SendPropertyChanged("classID");
					this.OnclassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speakerID", DbType="BigInt NOT NULL")]
		public long speakerID
		{
			get
			{
				return this._speakerID;
			}
			set
			{
				if ((this._speakerID != value))
				{
					if (this._SpeakerEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnspeakerIDChanging(value);
					this.SendPropertyChanging();
					this._speakerID = value;
					this.SendPropertyChanged("speakerID");
					this.OnspeakerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="Time")]
		public System.Nullable<System.TimeSpan> duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statDownloadCnt", DbType="Int NOT NULL")]
		public int statDownloadCnt
		{
			get
			{
				return this._statDownloadCnt;
			}
			set
			{
				if ((this._statDownloadCnt != value))
				{
					this.OnstatDownloadCntChanging(value);
					this.SendPropertyChanging();
					this._statDownloadCnt = value;
					this.SendPropertyChanged("statDownloadCnt");
					this.OnstatDownloadCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statListenCnt", DbType="Int NOT NULL")]
		public int statListenCnt
		{
			get
			{
				return this._statListenCnt;
			}
			set
			{
				if ((this._statListenCnt != value))
				{
					this.OnstatListenCntChanging(value);
					this.SendPropertyChanging();
					this._statListenCnt = value;
					this.SendPropertyChanged("statListenCnt");
					this.OnstatListenCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ClassEntity", Storage="_EntityItem", ThisKey="classID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.ClassEntity = null;
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.ClassEntity = this;
						this._classID = value.entityID;
					}
					else
					{
						this._classID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpeakerEntity_ClassEntity", Storage="_SpeakerEntity", ThisKey="speakerID", OtherKey="speakerID", IsForeignKey=true)]
		public SpeakerEntity SpeakerEntity
		{
			get
			{
				return this._SpeakerEntity.Entity;
			}
			set
			{
				SpeakerEntity previousValue = this._SpeakerEntity.Entity;
				if (((previousValue != value) 
							|| (this._SpeakerEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpeakerEntity.Entity = null;
						previousValue.ClassEntities.Remove(this);
					}
					this._SpeakerEntity.Entity = value;
					if ((value != null))
					{
						value.ClassEntities.Add(this);
						this._speakerID = value.speakerID;
					}
					else
					{
						this._speakerID = default(long);
					}
					this.SendPropertyChanged("SpeakerEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpeakerEntity")]
	public partial class SpeakerEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _speakerID;
		
		private string _contactInfo;
		
		private string _description;
		
		private EntitySet<ClassEntity> _ClassEntities;
		
		private EntityRef<EntityItem> _EntityItem;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnspeakerIDChanging(long value);
    partial void OnspeakerIDChanged();
    partial void OncontactInfoChanging(string value);
    partial void OncontactInfoChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public SpeakerEntity()
		{
			this._ClassEntities = new EntitySet<ClassEntity>(new Action<ClassEntity>(this.attach_ClassEntities), new Action<ClassEntity>(this.detach_ClassEntities));
			this._EntityItem = default(EntityRef<EntityItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speakerID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long speakerID
		{
			get
			{
				return this._speakerID;
			}
			set
			{
				if ((this._speakerID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnspeakerIDChanging(value);
					this.SendPropertyChanging();
					this._speakerID = value;
					this.SendPropertyChanged("speakerID");
					this.OnspeakerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactInfo", DbType="NVarChar(MAX)")]
		public string contactInfo
		{
			get
			{
				return this._contactInfo;
			}
			set
			{
				if ((this._contactInfo != value))
				{
					this.OncontactInfoChanging(value);
					this.SendPropertyChanging();
					this._contactInfo = value;
					this.SendPropertyChanged("contactInfo");
					this.OncontactInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpeakerEntity_ClassEntity", Storage="_ClassEntities", ThisKey="speakerID", OtherKey="speakerID")]
		public EntitySet<ClassEntity> ClassEntities
		{
			get
			{
				return this._ClassEntities;
			}
			set
			{
				this._ClassEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_SpeakerEntity", Storage="_EntityItem", ThisKey="speakerID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.SpeakerEntity = null;
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.SpeakerEntity = this;
						this._speakerID = value.entityID;
					}
					else
					{
						this._speakerID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassEntities(ClassEntity entity)
		{
			this.SendPropertyChanging();
			entity.SpeakerEntity = this;
		}
		
		private void detach_ClassEntities(ClassEntity entity)
		{
			this.SendPropertyChanging();
			entity.SpeakerEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogItemExtend")]
	public partial class CatalogItemExtend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _entityID;
		
		private string _code;
		
		private string _notes;
		
		private EntityRef<EntityItem> _EntityItem;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnentityIDChanging(long value);
    partial void OnentityIDChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    #endregion
		
		public CatalogItemExtend()
		{
			this._EntityItem = default(EntityRef<EntityItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entityID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long entityID
		{
			get
			{
				return this._entityID;
			}
			set
			{
				if ((this._entityID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnentityIDChanging(value);
					this.SendPropertyChanging();
					this._entityID = value;
					this.SendPropertyChanged("entityID");
					this.OnentityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(128)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_CatalogItemExtend", Storage="_EntityItem", ThisKey="entityID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.CatalogItemExtend = null;
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.CatalogItemExtend = this;
						this._entityID = value.entityID;
					}
					else
					{
						this._entityID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_ShoppingClass")]
	public partial class ShoppingClass
	{
		
		private System.Guid _UserId;
		
		private short _shoppingStateID;
		
		private bool _deleted;
		
		private string _title;
		
		private System.DateTime _createDate;
		
		private string _speakerName;
		
		private long _fileID;
		
		private long _classID;
		
		private bool _unlimitedAccessInLibrary;
		
		public ShoppingClass()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingStateID", DbType="SmallInt NOT NULL")]
		public short shoppingStateID
		{
			get
			{
				return this._shoppingStateID;
			}
			set
			{
				if ((this._shoppingStateID != value))
				{
					this._shoppingStateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this._deleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this._title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this._createDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speakerName", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string speakerName
		{
			get
			{
				return this._speakerName;
			}
			set
			{
				if ((this._speakerName != value))
				{
					this._speakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileID", DbType="BigInt NOT NULL")]
		public long fileID
		{
			get
			{
				return this._fileID;
			}
			set
			{
				if ((this._fileID != value))
				{
					this._fileID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classID", DbType="BigInt NOT NULL")]
		public long classID
		{
			get
			{
				return this._classID;
			}
			set
			{
				if ((this._classID != value))
				{
					this._classID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unlimitedAccessInLibrary", DbType="Bit NO NULL")]
		public bool unlimitedAccessInLibrary
		{
			get
			{
				return this._unlimitedAccessInLibrary;
			}
			set
			{
				if ((this._unlimitedAccessInLibrary != value))
				{
					this._unlimitedAccessInLibrary = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingCartPayment")]
	public partial class ShoppingCartPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _shoppingTransactionID;
		
		private string _membershipCartID;
		
		private System.Guid _UserId;
		
		private EntityRef<ShoppingTransaction> _ShoppingTransaction;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnshoppingTransactionIDChanging(long value);
    partial void OnshoppingTransactionIDChanged();
    partial void OnmembershipCartIDChanging(string value);
    partial void OnmembershipCartIDChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    #endregion
		
		public ShoppingCartPayment()
		{
			this._ShoppingTransaction = default(EntityRef<ShoppingTransaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingTransactionID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long shoppingTransactionID
		{
			get
			{
				return this._shoppingTransactionID;
			}
			set
			{
				if ((this._shoppingTransactionID != value))
				{
					if (this._ShoppingTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshoppingTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingTransactionID = value;
					this.SendPropertyChanged("shoppingTransactionID");
					this.OnshoppingTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_membershipCartID", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string membershipCartID
		{
			get
			{
				return this._membershipCartID;
			}
			set
			{
				if ((this._membershipCartID != value))
				{
					this.OnmembershipCartIDChanging(value);
					this.SendPropertyChanging();
					this._membershipCartID = value;
					this.SendPropertyChanged("membershipCartID");
					this.OnmembershipCartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingTransaction_ShoppingCartPayment", Storage="_ShoppingTransaction", ThisKey="shoppingTransactionID", OtherKey="shoppingTransactionID", IsForeignKey=true)]
		public ShoppingTransaction ShoppingTransaction
		{
			get
			{
				return this._ShoppingTransaction.Entity;
			}
			set
			{
				ShoppingTransaction previousValue = this._ShoppingTransaction.Entity;
				if (((previousValue != value) 
							|| (this._ShoppingTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShoppingTransaction.Entity = null;
						previousValue.ShoppingCartPayment = null;
					}
					this._ShoppingTransaction.Entity = value;
					if ((value != null))
					{
						value.ShoppingCartPayment = this;
						this._shoppingTransactionID = value.shoppingTransactionID;
					}
					else
					{
						this._shoppingTransactionID = default(long);
					}
					this.SendPropertyChanged("ShoppingTransaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingTransaction")]
	public partial class ShoppingTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _shoppingTransactionID;
		
		private System.DateTime _createDate;
		
		private decimal _holdBalance;
		
		private string _tranID;
		
		private decimal _amount;
		
		private string _comment;
		
		private string _chargetype;
		
		private short _transactionState;
		
		private string _response;
		
		private EntityRef<ShoppingMembershipAddress> _ShoppingMembershipAddress;
		
		private EntitySet<Shopping> _Shoppings;
		
		private EntityRef<ShoppingCartPayment> _ShoppingCartPayment;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnshoppingTransactionIDChanging(long value);
    partial void OnshoppingTransactionIDChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OnholdBalanceChanging(decimal value);
    partial void OnholdBalanceChanged();
    partial void OntranIDChanging(string value);
    partial void OntranIDChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnchargetypeChanging(string value);
    partial void OnchargetypeChanged();
    partial void OntransactionStateChanging(short value);
    partial void OntransactionStateChanged();
    partial void OnresponseChanging(string value);
    partial void OnresponseChanged();
    #endregion
		
		public ShoppingTransaction()
		{
			this._ShoppingMembershipAddress = default(EntityRef<ShoppingMembershipAddress>);
			this._Shoppings = new EntitySet<Shopping>(new Action<Shopping>(this.attach_Shoppings), new Action<Shopping>(this.detach_Shoppings));
			this._ShoppingCartPayment = default(EntityRef<ShoppingCartPayment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingTransactionID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long shoppingTransactionID
		{
			get
			{
				return this._shoppingTransactionID;
			}
			set
			{
				if ((this._shoppingTransactionID != value))
				{
					this.OnshoppingTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingTransactionID = value;
					this.SendPropertyChanged("shoppingTransactionID");
					this.OnshoppingTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_holdBalance", DbType="Money NOT NULL")]
		public decimal holdBalance
		{
			get
			{
				return this._holdBalance;
			}
			set
			{
				if ((this._holdBalance != value))
				{
					this.OnholdBalanceChanging(value);
					this.SendPropertyChanging();
					this._holdBalance = value;
					this.SendPropertyChanged("holdBalance");
					this.OnholdBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tranID", DbType="VarChar(64)")]
		public string tranID
		{
			get
			{
				return this._tranID;
			}
			set
			{
				if ((this._tranID != value))
				{
					this.OntranIDChanging(value);
					this.SendPropertyChanging();
					this._tranID = value;
					this.SendPropertyChanged("tranID");
					this.OntranIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Money NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(10)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chargetype", DbType="VarChar(100)")]
		public string chargetype
		{
			get
			{
				return this._chargetype;
			}
			set
			{
				if ((this._chargetype != value))
				{
					this.OnchargetypeChanging(value);
					this.SendPropertyChanging();
					this._chargetype = value;
					this.SendPropertyChanged("chargetype");
					this.OnchargetypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionState", DbType="SmallInt NOT NULL")]
		public short transactionState
		{
			get
			{
				return this._transactionState;
			}
			set
			{
				if ((this._transactionState != value))
				{
					this.OntransactionStateChanging(value);
					this.SendPropertyChanging();
					this._transactionState = value;
					this.SendPropertyChanged("transactionState");
					this.OntransactionStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_response", DbType="NVarChar(1024)")]
		public string response
		{
			get
			{
				return this._response;
			}
			set
			{
				if ((this._response != value))
				{
					this.OnresponseChanging(value);
					this.SendPropertyChanging();
					this._response = value;
					this.SendPropertyChanged("response");
					this.OnresponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingTransaction_ShoppingMembershipAddress", Storage="_ShoppingMembershipAddress", ThisKey="shoppingTransactionID", OtherKey="shoppingTransactionID", IsUnique=true, IsForeignKey=false)]
		public ShoppingMembershipAddress ShoppingMembershipAddress
		{
			get
			{
				return this._ShoppingMembershipAddress.Entity;
			}
			set
			{
				ShoppingMembershipAddress previousValue = this._ShoppingMembershipAddress.Entity;
				if (((previousValue != value) 
							|| (this._ShoppingMembershipAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShoppingMembershipAddress.Entity = null;
						previousValue.ShoppingTransaction = null;
					}
					this._ShoppingMembershipAddress.Entity = value;
					if ((value != null))
					{
						value.ShoppingTransaction = this;
					}
					this.SendPropertyChanged("ShoppingMembershipAddress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingTransaction_Shopping", Storage="_Shoppings", ThisKey="shoppingTransactionID", OtherKey="shoppingTransactionID")]
		public EntitySet<Shopping> Shoppings
		{
			get
			{
				return this._Shoppings;
			}
			set
			{
				this._Shoppings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingTransaction_ShoppingCartPayment", Storage="_ShoppingCartPayment", ThisKey="shoppingTransactionID", OtherKey="shoppingTransactionID", IsUnique=true, IsForeignKey=false)]
		public ShoppingCartPayment ShoppingCartPayment
		{
			get
			{
				return this._ShoppingCartPayment.Entity;
			}
			set
			{
				ShoppingCartPayment previousValue = this._ShoppingCartPayment.Entity;
				if (((previousValue != value) 
							|| (this._ShoppingCartPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShoppingCartPayment.Entity = null;
						previousValue.ShoppingTransaction = null;
					}
					this._ShoppingCartPayment.Entity = value;
					if ((value != null))
					{
						value.ShoppingTransaction = this;
					}
					this.SendPropertyChanged("ShoppingCartPayment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Shoppings(Shopping entity)
		{
			this.SendPropertyChanging();
			entity.ShoppingTransaction = this;
		}
		
		private void detach_Shoppings(Shopping entity)
		{
			this.SendPropertyChanging();
			entity.ShoppingTransaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_ShoppingTransaction")]
	public partial class UserShoppingTransaction
	{
		
		private System.DateTime _createDate;
		
		private long _shoppingTransactionID;
		
		private string _tranID;
		
		private string _comment;
		
		private System.Guid _UserId;
		
		private System.Nullable<decimal> _amount;
		
		private string _membershipCartID;
		
		private System.Nullable<long> _cartStateID;
		
		private System.Nullable<System.DateTime> _expirationDate;
		
		private string _cartTypeID;
		
		private string _cartTranID;
		
		private string _response;
		
		private string _chargetype;
		
		private short _transactionState;
		
		public UserShoppingTransaction()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this._createDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingTransactionID", DbType="BigInt NOT NULL")]
		public long shoppingTransactionID
		{
			get
			{
				return this._shoppingTransactionID;
			}
			set
			{
				if ((this._shoppingTransactionID != value))
				{
					this._shoppingTransactionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tranID", DbType="VarChar(64)")]
		public string tranID
		{
			get
			{
				return this._tranID;
			}
			set
			{
				if ((this._tranID != value))
				{
					this._tranID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(10)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this._comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Money")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this._amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_membershipCartID", DbType="Char(3)")]
		public string membershipCartID
		{
			get
			{
				return this._membershipCartID;
			}
			set
			{
				if ((this._membershipCartID != value))
				{
					this._membershipCartID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartStateID", DbType="BigInt")]
		public System.Nullable<long> cartStateID
		{
			get
			{
				return this._cartStateID;
			}
			set
			{
				if ((this._cartStateID != value))
				{
					this._cartStateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expirationDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> expirationDate
		{
			get
			{
				return this._expirationDate;
			}
			set
			{
				if ((this._expirationDate != value))
				{
					this._expirationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartTypeID", DbType="VarChar(32)")]
		public string cartTypeID
		{
			get
			{
				return this._cartTypeID;
			}
			set
			{
				if ((this._cartTypeID != value))
				{
					this._cartTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartTranID", DbType="VarChar(64)")]
		public string cartTranID
		{
			get
			{
				return this._cartTranID;
			}
			set
			{
				if ((this._cartTranID != value))
				{
					this._cartTranID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_response", DbType="VarChar(255)")]
		public string response
		{
			get
			{
				return this._response;
			}
			set
			{
				if ((this._response != value))
				{
					this._response = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chargetype", DbType="VarChar(100)")]
		public string chargetype
		{
			get
			{
				return this._chargetype;
			}
			set
			{
				if ((this._chargetype != value))
				{
					this._chargetype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionState", DbType="SmallInt NOT NULL")]
		public short transactionState
		{
			get
			{
				return this._transactionState;
			}
			set
			{
				if ((this._transactionState != value))
				{
					this._transactionState = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembershipAddress")]
	public partial class MembershipAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _addressID;
		
		private System.Guid _UserId;
		
		private bool _isBillingAddress;
		
		private string _country;
		
		private string _postalCode;
		
		private string _state;
		
		private string _city;
		
		private string _postalAdderss;
		
		private string _phone;
		
		private string _dayPhone;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _description;
		
		private EntitySet<ShoppingMembershipAddress> _ShoppingMembershipAddresses;
		
		private EntityRef<Membership> _Membership;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaddressIDChanging(long value);
    partial void OnaddressIDChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnisBillingAddressChanging(bool value);
    partial void OnisBillingAddressChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpostalAdderssChanging(string value);
    partial void OnpostalAdderssChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OndayPhoneChanging(string value);
    partial void OndayPhoneChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public MembershipAddress()
		{
			this._ShoppingMembershipAddresses = new EntitySet<ShoppingMembershipAddress>(new Action<ShoppingMembershipAddress>(this.attach_ShoppingMembershipAddresses), new Action<ShoppingMembershipAddress>(this.detach_ShoppingMembershipAddresses));
			this._Membership = default(EntityRef<Membership>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long addressID
		{
			get
			{
				return this._addressID;
			}
			set
			{
				if ((this._addressID != value))
				{
					this.OnaddressIDChanging(value);
					this.SendPropertyChanging();
					this._addressID = value;
					this.SendPropertyChanged("addressID");
					this.OnaddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isBillingAddress", DbType="Bit NOT NULL")]
		public bool isBillingAddress
		{
			get
			{
				return this._isBillingAddress;
			}
			set
			{
				if ((this._isBillingAddress != value))
				{
					this.OnisBillingAddressChanging(value);
					this.SendPropertyChanging();
					this._isBillingAddress = value;
					this.SendPropertyChanged("isBillingAddress");
					this.OnisBillingAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="NVarChar(64)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(16)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(256)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalAdderss", DbType="NVarChar(256)")]
		public string postalAdderss
		{
			get
			{
				return this._postalAdderss;
			}
			set
			{
				if ((this._postalAdderss != value))
				{
					this.OnpostalAdderssChanging(value);
					this.SendPropertyChanging();
					this._postalAdderss = value;
					this.SendPropertyChanged("postalAdderss");
					this.OnpostalAdderssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(256)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dayPhone", DbType="NVarChar(256)")]
		public string dayPhone
		{
			get
			{
				return this._dayPhone;
			}
			set
			{
				if ((this._dayPhone != value))
				{
					this.OndayPhoneChanging(value);
					this.SendPropertyChanging();
					this._dayPhone = value;
					this.SendPropertyChanged("dayPhone");
					this.OndayPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(128)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(128)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipAddress_ShoppingMembershipAddress", Storage="_ShoppingMembershipAddresses", ThisKey="addressID", OtherKey="addressID")]
		public EntitySet<ShoppingMembershipAddress> ShoppingMembershipAddresses
		{
			get
			{
				return this._ShoppingMembershipAddresses;
			}
			set
			{
				this._ShoppingMembershipAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MembershipAddress", Storage="_Membership", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.MembershipAddresses.Remove(this);
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.MembershipAddresses.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShoppingMembershipAddresses(ShoppingMembershipAddress entity)
		{
			this.SendPropertyChanging();
			entity.MembershipAddress = this;
		}
		
		private void detach_ShoppingMembershipAddresses(ShoppingMembershipAddress entity)
		{
			this.SendPropertyChanging();
			entity.MembershipAddress = null;
		}
	}
}
#pragma warning restore 1591
