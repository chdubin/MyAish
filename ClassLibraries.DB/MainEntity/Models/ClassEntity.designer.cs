#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.208
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MainEntity.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Aisha")]
	public partial class ClassEntityDataContext2 : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClassEntity(MainEntity.Models.Class.ClassEntity instance);
    partial void UpdateClassEntity(MainEntity.Models.Class.ClassEntity instance);
    partial void DeleteClassEntity(MainEntity.Models.Class.ClassEntity instance);
    partial void InsertEntityItem(MainEntity.Models.Class.EntityItem instance);
    partial void UpdateEntityItem(MainEntity.Models.Class.EntityItem instance);
    partial void DeleteEntityItem(MainEntity.Models.Class.EntityItem instance);
    partial void InsertTag(MainEntity.Models.Class.Tag instance);
    partial void UpdateTag(MainEntity.Models.Class.Tag instance);
    partial void DeleteTag(MainEntity.Models.Class.Tag instance);
    partial void InsertTagXrefEntity(MainEntity.Models.Class.TagXrefEntity instance);
    partial void UpdateTagXrefEntity(MainEntity.Models.Class.TagXrefEntity instance);
    partial void DeleteTagXrefEntity(MainEntity.Models.Class.TagXrefEntity instance);
    partial void InsertCatalogItemXrefPortal(MainEntity.Models.Class.CatalogItemXrefPortal instance);
    partial void UpdateCatalogItemXrefPortal(MainEntity.Models.Class.CatalogItemXrefPortal instance);
    partial void DeleteCatalogItemXrefPortal(MainEntity.Models.Class.CatalogItemXrefPortal instance);
    partial void InsertCatalogItemExtend(MainEntity.Models.Class.CatalogItemExtend instance);
    partial void UpdateCatalogItemExtend(MainEntity.Models.Class.CatalogItemExtend instance);
    partial void DeleteCatalogItemExtend(MainEntity.Models.Class.CatalogItemExtend instance);
    partial void InsertProductXrefEntity(MainEntity.Models.Class.ProductXrefEntity instance);
    partial void UpdateProductXrefEntity(MainEntity.Models.Class.ProductXrefEntity instance);
    partial void DeleteProductXrefEntity(MainEntity.Models.Class.ProductXrefEntity instance);
    partial void InsertProductEntity(MainEntity.Models.Class.ProductEntity instance);
    partial void UpdateProductEntity(MainEntity.Models.Class.ProductEntity instance);
    partial void DeleteProductEntity(MainEntity.Models.Class.ProductEntity instance);
    partial void InsertProductEntityShipping(MainEntity.Models.Class.ProductEntityShipping instance);
    partial void UpdateProductEntityShipping(MainEntity.Models.Class.ProductEntityShipping instance);
    partial void DeleteProductEntityShipping(MainEntity.Models.Class.ProductEntityShipping instance);
    partial void InsertShippingLocation(MainEntity.Models.Class.ShippingLocation instance);
    partial void UpdateShippingLocation(MainEntity.Models.Class.ShippingLocation instance);
    partial void DeleteShippingLocation(MainEntity.Models.Class.ShippingLocation instance);
    partial void InsertFileEntity(MainEntity.Models.Class.FileEntity instance);
    partial void UpdateFileEntity(MainEntity.Models.Class.FileEntity instance);
    partial void DeleteFileEntity(MainEntity.Models.Class.FileEntity instance);
    #endregion
		
		public ClassEntityDataContext2() : 
				base(global::MainEntity.Properties.Settings.Default.AishaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ClassEntityDataContext2(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClassEntityDataContext2(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClassEntityDataContext2(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClassEntityDataContext2(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Class.ClassEntity> ClassEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.Class.ClassEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Class.EntityItem> EntityItems
		{
			get
			{
				return this.GetTable<MainEntity.Models.Class.EntityItem>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Class.Tag> Tags
		{
			get
			{
				return this.GetTable<MainEntity.Models.Class.Tag>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Class.TagXrefEntity> TagXrefEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.Class.TagXrefEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Class.CatalogItemXrefPortal> CatalogItemXrefPortals
		{
			get
			{
				return this.GetTable<MainEntity.Models.Class.CatalogItemXrefPortal>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Class.CatalogItemExtend> CatalogItemExtends
		{
			get
			{
				return this.GetTable<MainEntity.Models.Class.CatalogItemExtend>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Class.ProductXrefEntity> ProductXrefEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.Class.ProductXrefEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Class.ProductEntity> ProductEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.Class.ProductEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Class.ProductEntityShipping> ProductEntityShippings
		{
			get
			{
				return this.GetTable<MainEntity.Models.Class.ProductEntityShipping>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Class.ShippingLocation> ShippingLocations
		{
			get
			{
				return this.GetTable<MainEntity.Models.Class.ShippingLocation>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Class.FileEntity> FileEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.Class.FileEntity>();
			}
		}
	}
}
namespace MainEntity.Models.Class
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassEntity")]
	public partial class ClassEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _classID;
		
		private long _speakerID;
		
		private string _description;
		
		private System.Nullable<System.TimeSpan> _duration;
		
		private string _statDownloadCnt;
		
		private string _statListenCnt;
		
		private System.Nullable<int> _newOrder;
		
		private EntityRef<EntityItem> _EntityItem;
		
		private EntitySet<TagXrefEntity> _TagXrefEntities;
		
		private EntityRef<CatalogItemXrefPortal> _CatalogItemXrefPortal;
		
		private EntityRef<CatalogItemExtend> _CatalogItemExtend;
		
		private EntityRef<EntityItem> _EntityItemSpeaker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclassIDChanging(long value);
    partial void OnclassIDChanged();
    partial void OnspeakerIDChanging(long value);
    partial void OnspeakerIDChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndurationChanging(System.Nullable<System.TimeSpan> value);
    partial void OndurationChanged();
    partial void OnstatDownloadCntChanging(string value);
    partial void OnstatDownloadCntChanged();
    partial void OnstatListenCntChanging(string value);
    partial void OnstatListenCntChanged();
    partial void OnnewOrderChanging(System.Nullable<int> value);
    partial void OnnewOrderChanged();
    #endregion
		
		public ClassEntity()
		{
			this._EntityItem = default(EntityRef<EntityItem>);
			this._TagXrefEntities = new EntitySet<TagXrefEntity>(new Action<TagXrefEntity>(this.attach_TagXrefEntities), new Action<TagXrefEntity>(this.detach_TagXrefEntities));
			this._CatalogItemXrefPortal = default(EntityRef<CatalogItemXrefPortal>);
			this._CatalogItemExtend = default(EntityRef<CatalogItemExtend>);
			this._EntityItemSpeaker = default(EntityRef<EntityItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long classID
		{
			get
			{
				return this._classID;
			}
			set
			{
				if ((this._classID != value))
				{
					this.OnclassIDChanging(value);
					this.SendPropertyChanging();
					this._classID = value;
					this.SendPropertyChanged("classID");
					this.OnclassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speakerID", DbType="BigInt NOT NULL")]
		public long speakerID
		{
			get
			{
				return this._speakerID;
			}
			set
			{
				if ((this._speakerID != value))
				{
					if (this._EntityItemSpeaker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnspeakerIDChanging(value);
					this.SendPropertyChanging();
					this._speakerID = value;
					this.SendPropertyChanged("speakerID");
					this.OnspeakerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="Time")]
		public System.Nullable<System.TimeSpan> duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statDownloadCnt", CanBeNull=false)]
		public string statDownloadCnt
		{
			get
			{
				return this._statDownloadCnt;
			}
			set
			{
				if ((this._statDownloadCnt != value))
				{
					this.OnstatDownloadCntChanging(value);
					this.SendPropertyChanging();
					this._statDownloadCnt = value;
					this.SendPropertyChanged("statDownloadCnt");
					this.OnstatDownloadCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statListenCnt", CanBeNull=false)]
		public string statListenCnt
		{
			get
			{
				return this._statListenCnt;
			}
			set
			{
				if ((this._statListenCnt != value))
				{
					this.OnstatListenCntChanging(value);
					this.SendPropertyChanging();
					this._statListenCnt = value;
					this.SendPropertyChanged("statListenCnt");
					this.OnstatListenCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_newOrder", DbType="Int")]
		public System.Nullable<int> newOrder
		{
			get
			{
				return this._newOrder;
			}
			set
			{
				if ((this._newOrder != value))
				{
					this.OnnewOrderChanging(value);
					this.SendPropertyChanging();
					this._newOrder = value;
					this.SendPropertyChanged("newOrder");
					this.OnnewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassEntity_EntityItem", Storage="_EntityItem", ThisKey="classID", OtherKey="entityID", IsUnique=true, IsForeignKey=false)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.ClassEntity = null;
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.ClassEntity = this;
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassEntity_TagXrefEntity", Storage="_TagXrefEntities", ThisKey="classID", OtherKey="entityID")]
		public EntitySet<TagXrefEntity> TagXrefEntities
		{
			get
			{
				return this._TagXrefEntities;
			}
			set
			{
				this._TagXrefEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassEntity_CatalogItemXrefPortal", Storage="_CatalogItemXrefPortal", ThisKey="classID", OtherKey="catalogItemID", IsUnique=true, IsForeignKey=false)]
		public CatalogItemXrefPortal CatalogItemXrefPortal
		{
			get
			{
				return this._CatalogItemXrefPortal.Entity;
			}
			set
			{
				CatalogItemXrefPortal previousValue = this._CatalogItemXrefPortal.Entity;
				if (((previousValue != value) 
							|| (this._CatalogItemXrefPortal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatalogItemXrefPortal.Entity = null;
						previousValue.ClassEntity = null;
					}
					this._CatalogItemXrefPortal.Entity = value;
					if ((value != null))
					{
						value.ClassEntity = this;
					}
					this.SendPropertyChanged("CatalogItemXrefPortal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassEntity_CatalogItemExtend", Storage="_CatalogItemExtend", ThisKey="classID", OtherKey="entityID", IsUnique=true, IsForeignKey=false)]
		public CatalogItemExtend CatalogItemExtend
		{
			get
			{
				return this._CatalogItemExtend.Entity;
			}
			set
			{
				CatalogItemExtend previousValue = this._CatalogItemExtend.Entity;
				if (((previousValue != value) 
							|| (this._CatalogItemExtend.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatalogItemExtend.Entity = null;
						previousValue.ClassEntity = null;
					}
					this._CatalogItemExtend.Entity = value;
					if ((value != null))
					{
						value.ClassEntity = this;
					}
					this.SendPropertyChanged("CatalogItemExtend");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ClassEntity", Storage="_EntityItemSpeaker", ThisKey="speakerID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItemSpeaker
		{
			get
			{
				return this._EntityItemSpeaker.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItemSpeaker.Entity;
				if (((previousValue != value) 
							|| (this._EntityItemSpeaker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItemSpeaker.Entity = null;
						previousValue.ClassEntities.Remove(this);
					}
					this._EntityItemSpeaker.Entity = value;
					if ((value != null))
					{
						value.ClassEntities.Add(this);
						this._speakerID = value.entityID;
					}
					else
					{
						this._speakerID = default(long);
					}
					this.SendPropertyChanged("EntityItemSpeaker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagXrefEntities(TagXrefEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClassEntity = this;
		}
		
		private void detach_TagXrefEntities(TagXrefEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClassEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityItem")]
	public partial class EntityItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _entityID;
		
		private long _rootEntityID;
		
		private long _parentEntityID;
		
		private int _typeID;
		
		private System.Guid _creatorID;
		
		private string _hierarchiID;
		
		private string _title;
		
		private int _sortOrder;
		
		private System.DateTime _createDate;
		
		private bool _deleted;
		
		private bool _active;
		
		private EntitySet<ClassEntity> _ClassEntities;
		
		private EntitySet<ProductXrefEntity> _ProductXrefEntities;
		
		private EntityRef<ProductEntity> _ProductEntity;
		
		private EntityRef<FileEntity> _FileEntity;
		
		private EntityRef<ClassEntity> _ClassEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnentityIDChanging(long value);
    partial void OnentityIDChanged();
    partial void OnrootEntityIDChanging(long value);
    partial void OnrootEntityIDChanged();
    partial void OnparentEntityIDChanging(long value);
    partial void OnparentEntityIDChanged();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OncreatorIDChanging(System.Guid value);
    partial void OncreatorIDChanged();
    partial void OnhierarchiIDChanging(string value);
    partial void OnhierarchiIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnsortOrderChanging(int value);
    partial void OnsortOrderChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public EntityItem()
		{
			this._ClassEntities = new EntitySet<ClassEntity>(new Action<ClassEntity>(this.attach_ClassEntities), new Action<ClassEntity>(this.detach_ClassEntities));
			this._ProductXrefEntities = new EntitySet<ProductXrefEntity>(new Action<ProductXrefEntity>(this.attach_ProductXrefEntities), new Action<ProductXrefEntity>(this.detach_ProductXrefEntities));
			this._ProductEntity = default(EntityRef<ProductEntity>);
			this._FileEntity = default(EntityRef<FileEntity>);
			this._ClassEntity = default(EntityRef<ClassEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entityID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long entityID
		{
			get
			{
				return this._entityID;
			}
			set
			{
				if ((this._entityID != value))
				{
					if (this._ClassEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnentityIDChanging(value);
					this.SendPropertyChanging();
					this._entityID = value;
					this.SendPropertyChanged("entityID");
					this.OnentityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rootEntityID", DbType="BigInt NOT NULL")]
		public long rootEntityID
		{
			get
			{
				return this._rootEntityID;
			}
			set
			{
				if ((this._rootEntityID != value))
				{
					this.OnrootEntityIDChanging(value);
					this.SendPropertyChanging();
					this._rootEntityID = value;
					this.SendPropertyChanged("rootEntityID");
					this.OnrootEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentEntityID", DbType="BigInt NOT NULL")]
		public long parentEntityID
		{
			get
			{
				return this._parentEntityID;
			}
			set
			{
				if ((this._parentEntityID != value))
				{
					this.OnparentEntityIDChanging(value);
					this.SendPropertyChanging();
					this._parentEntityID = value;
					this.SendPropertyChanged("parentEntityID");
					this.OnparentEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL")]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creatorID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid creatorID
		{
			get
			{
				return this._creatorID;
			}
			set
			{
				if ((this._creatorID != value))
				{
					this.OncreatorIDChanging(value);
					this.SendPropertyChanging();
					this._creatorID = value;
					this.SendPropertyChanged("creatorID");
					this.OncreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hierarchiID", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string hierarchiID
		{
			get
			{
				return this._hierarchiID;
			}
			set
			{
				if ((this._hierarchiID != value))
				{
					this.OnhierarchiIDChanging(value);
					this.SendPropertyChanging();
					this._hierarchiID = value;
					this.SendPropertyChanged("hierarchiID");
					this.OnhierarchiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortOrder", DbType="Int NOT NULL")]
		public int sortOrder
		{
			get
			{
				return this._sortOrder;
			}
			set
			{
				if ((this._sortOrder != value))
				{
					this.OnsortOrderChanging(value);
					this.SendPropertyChanging();
					this._sortOrder = value;
					this.SendPropertyChanged("sortOrder");
					this.OnsortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ClassEntity", Storage="_ClassEntities", ThisKey="entityID", OtherKey="speakerID")]
		public EntitySet<ClassEntity> ClassEntities
		{
			get
			{
				return this._ClassEntities;
			}
			set
			{
				this._ClassEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ProductXrefEntity", Storage="_ProductXrefEntities", ThisKey="entityID", OtherKey="entityID")]
		public EntitySet<ProductXrefEntity> ProductXrefEntities
		{
			get
			{
				return this._ProductXrefEntities;
			}
			set
			{
				this._ProductXrefEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ProductEntity", Storage="_ProductEntity", ThisKey="entityID", OtherKey="productID", IsUnique=true, IsForeignKey=false)]
		public ProductEntity ProductEntity
		{
			get
			{
				return this._ProductEntity.Entity;
			}
			set
			{
				ProductEntity previousValue = this._ProductEntity.Entity;
				if (((previousValue != value) 
							|| (this._ProductEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductEntity.Entity = null;
						previousValue.EntityItem = null;
					}
					this._ProductEntity.Entity = value;
					if ((value != null))
					{
						value.EntityItem = this;
					}
					this.SendPropertyChanged("ProductEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_FileEntity", Storage="_FileEntity", ThisKey="entityID", OtherKey="fileID", IsUnique=true, IsForeignKey=false)]
		public FileEntity FileEntity
		{
			get
			{
				return this._FileEntity.Entity;
			}
			set
			{
				FileEntity previousValue = this._FileEntity.Entity;
				if (((previousValue != value) 
							|| (this._FileEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileEntity.Entity = null;
						previousValue.EntityItem = null;
					}
					this._FileEntity.Entity = value;
					if ((value != null))
					{
						value.EntityItem = this;
					}
					this.SendPropertyChanged("FileEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassEntity_EntityItem", Storage="_ClassEntity", ThisKey="entityID", OtherKey="classID", IsForeignKey=true)]
		public ClassEntity ClassEntity
		{
			get
			{
				return this._ClassEntity.Entity;
			}
			set
			{
				ClassEntity previousValue = this._ClassEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClassEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassEntity.Entity = null;
						previousValue.EntityItem = null;
					}
					this._ClassEntity.Entity = value;
					if ((value != null))
					{
						value.EntityItem = this;
						this._entityID = value.classID;
					}
					else
					{
						this._entityID = default(long);
					}
					this.SendPropertyChanged("ClassEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassEntities(ClassEntity entity)
		{
			this.SendPropertyChanging();
			entity.EntityItemSpeaker = this;
		}
		
		private void detach_ClassEntities(ClassEntity entity)
		{
			this.SendPropertyChanging();
			entity.EntityItemSpeaker = null;
		}
		
		private void attach_ProductXrefEntities(ProductXrefEntity entity)
		{
			this.SendPropertyChanging();
			entity.EntityItem = this;
		}
		
		private void detach_ProductXrefEntities(ProductXrefEntity entity)
		{
			this.SendPropertyChanging();
			entity.EntityItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tags")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tagID;
		
		private short _tagTypeID;
		
		private string _name;
		
		private EntitySet<TagXrefEntity> _TagXrefEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntagIDChanging(int value);
    partial void OntagIDChanged();
    partial void OntagTypeIDChanging(short value);
    partial void OntagTypeIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Tag()
		{
			this._TagXrefEntities = new EntitySet<TagXrefEntity>(new Action<TagXrefEntity>(this.attach_TagXrefEntities), new Action<TagXrefEntity>(this.detach_TagXrefEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tagID
		{
			get
			{
				return this._tagID;
			}
			set
			{
				if ((this._tagID != value))
				{
					this.OntagIDChanging(value);
					this.SendPropertyChanging();
					this._tagID = value;
					this.SendPropertyChanged("tagID");
					this.OntagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tagTypeID", DbType="SmallInt NOT NULL")]
		public short tagTypeID
		{
			get
			{
				return this._tagTypeID;
			}
			set
			{
				if ((this._tagTypeID != value))
				{
					this.OntagTypeIDChanging(value);
					this.SendPropertyChanging();
					this._tagTypeID = value;
					this.SendPropertyChanged("tagTypeID");
					this.OntagTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_TagXrefEntity", Storage="_TagXrefEntities", ThisKey="tagID", OtherKey="tagID")]
		public EntitySet<TagXrefEntity> TagXrefEntities
		{
			get
			{
				return this._TagXrefEntities;
			}
			set
			{
				this._TagXrefEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagXrefEntities(TagXrefEntity entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_TagXrefEntities(TagXrefEntity entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagXrefEntity")]
	public partial class TagXrefEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tagID;
		
		private long _entityID;
		
		private EntityRef<ClassEntity> _ClassEntity;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntagIDChanging(int value);
    partial void OntagIDChanged();
    partial void OnentityIDChanging(long value);
    partial void OnentityIDChanged();
    #endregion
		
		public TagXrefEntity()
		{
			this._ClassEntity = default(EntityRef<ClassEntity>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tagID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int tagID
		{
			get
			{
				return this._tagID;
			}
			set
			{
				if ((this._tagID != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntagIDChanging(value);
					this.SendPropertyChanging();
					this._tagID = value;
					this.SendPropertyChanged("tagID");
					this.OntagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entityID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long entityID
		{
			get
			{
				return this._entityID;
			}
			set
			{
				if ((this._entityID != value))
				{
					if (this._ClassEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnentityIDChanging(value);
					this.SendPropertyChanging();
					this._entityID = value;
					this.SendPropertyChanged("entityID");
					this.OnentityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassEntity_TagXrefEntity", Storage="_ClassEntity", ThisKey="entityID", OtherKey="classID", IsForeignKey=true)]
		public ClassEntity ClassEntity
		{
			get
			{
				return this._ClassEntity.Entity;
			}
			set
			{
				ClassEntity previousValue = this._ClassEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClassEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassEntity.Entity = null;
						previousValue.TagXrefEntities.Remove(this);
					}
					this._ClassEntity.Entity = value;
					if ((value != null))
					{
						value.TagXrefEntities.Add(this);
						this._entityID = value.classID;
					}
					else
					{
						this._entityID = default(long);
					}
					this.SendPropertyChanged("ClassEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_TagXrefEntity", Storage="_Tag", ThisKey="tagID", OtherKey="tagID", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.TagXrefEntities.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.TagXrefEntities.Add(this);
						this._tagID = value.tagID;
					}
					else
					{
						this._tagID = default(int);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogItemXrefPortal")]
	public partial class CatalogItemXrefPortal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _portalID;
		
		private long _catalogItemID;
		
		private bool _isVisible;
		
		private bool _isFree;
		
		private bool _isFreeOffer;
		
		private bool _isFullFree;
		
		private EntityRef<ClassEntity> _ClassEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnportalIDChanging(long value);
    partial void OnportalIDChanged();
    partial void OncatalogItemIDChanging(long value);
    partial void OncatalogItemIDChanged();
    partial void OnisVisibleChanging(bool value);
    partial void OnisVisibleChanged();
    partial void OnisFreeChanging(bool value);
    partial void OnisFreeChanged();
    partial void OnisFreeOfferChanging(bool value);
    partial void OnisFreeOfferChanged();
    partial void OnisFullFreeChanging(bool value);
    partial void OnisFullFreeChanged();
    #endregion
		
		public CatalogItemXrefPortal()
		{
			this._ClassEntity = default(EntityRef<ClassEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_portalID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long portalID
		{
			get
			{
				return this._portalID;
			}
			set
			{
				if ((this._portalID != value))
				{
					this.OnportalIDChanging(value);
					this.SendPropertyChanging();
					this._portalID = value;
					this.SendPropertyChanged("portalID");
					this.OnportalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catalogItemID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long catalogItemID
		{
			get
			{
				return this._catalogItemID;
			}
			set
			{
				if ((this._catalogItemID != value))
				{
					if (this._ClassEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncatalogItemIDChanging(value);
					this.SendPropertyChanging();
					this._catalogItemID = value;
					this.SendPropertyChanged("catalogItemID");
					this.OncatalogItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isVisible", DbType="Bit NOT NULL")]
		public bool isVisible
		{
			get
			{
				return this._isVisible;
			}
			set
			{
				if ((this._isVisible != value))
				{
					this.OnisVisibleChanging(value);
					this.SendPropertyChanging();
					this._isVisible = value;
					this.SendPropertyChanged("isVisible");
					this.OnisVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isFree", DbType="Bit NOT NULL")]
		public bool isFree
		{
			get
			{
				return this._isFree;
			}
			set
			{
				if ((this._isFree != value))
				{
					this.OnisFreeChanging(value);
					this.SendPropertyChanging();
					this._isFree = value;
					this.SendPropertyChanged("isFree");
					this.OnisFreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isFreeOffer", DbType="Bit NOT NULL")]
		public bool isFreeOffer
		{
			get
			{
				return this._isFreeOffer;
			}
			set
			{
				if ((this._isFreeOffer != value))
				{
					this.OnisFreeOfferChanging(value);
					this.SendPropertyChanging();
					this._isFreeOffer = value;
					this.SendPropertyChanged("isFreeOffer");
					this.OnisFreeOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isFullFree", DbType="Bit NOT NULL")]
		public bool isFullFree
		{
			get
			{
				return this._isFullFree;
			}
			set
			{
				if ((this._isFullFree != value))
				{
					this.OnisFullFreeChanging(value);
					this.SendPropertyChanging();
					this._isFullFree = value;
					this.SendPropertyChanged("isFullFree");
					this.OnisFullFreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassEntity_CatalogItemXrefPortal", Storage="_ClassEntity", ThisKey="catalogItemID", OtherKey="classID", IsForeignKey=true)]
		public ClassEntity ClassEntity
		{
			get
			{
				return this._ClassEntity.Entity;
			}
			set
			{
				ClassEntity previousValue = this._ClassEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClassEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassEntity.Entity = null;
						previousValue.CatalogItemXrefPortal = null;
					}
					this._ClassEntity.Entity = value;
					if ((value != null))
					{
						value.CatalogItemXrefPortal = this;
						this._catalogItemID = value.classID;
					}
					else
					{
						this._catalogItemID = default(long);
					}
					this.SendPropertyChanged("ClassEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogItemExtend")]
	public partial class CatalogItemExtend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _entityID;
		
		private string _code;
		
		private string _notes;
		
		private EntityRef<ClassEntity> _ClassEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnentityIDChanging(long value);
    partial void OnentityIDChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    #endregion
		
		public CatalogItemExtend()
		{
			this._ClassEntity = default(EntityRef<ClassEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entityID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long entityID
		{
			get
			{
				return this._entityID;
			}
			set
			{
				if ((this._entityID != value))
				{
					if (this._ClassEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnentityIDChanging(value);
					this.SendPropertyChanging();
					this._entityID = value;
					this.SendPropertyChanged("entityID");
					this.OnentityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(128)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassEntity_CatalogItemExtend", Storage="_ClassEntity", ThisKey="entityID", OtherKey="classID", IsForeignKey=true)]
		public ClassEntity ClassEntity
		{
			get
			{
				return this._ClassEntity.Entity;
			}
			set
			{
				ClassEntity previousValue = this._ClassEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClassEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassEntity.Entity = null;
						previousValue.CatalogItemExtend = null;
					}
					this._ClassEntity.Entity = value;
					if ((value != null))
					{
						value.CatalogItemExtend = this;
						this._entityID = value.classID;
					}
					else
					{
						this._entityID = default(long);
					}
					this.SendPropertyChanged("ClassEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductXrefEntity")]
	public partial class ProductXrefEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _productID;
		
		private long _entityID;
		
		private EntityRef<EntityItem> _EntityItem;
		
		private EntityRef<ProductEntity> _ProductEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIDChanging(long value);
    partial void OnproductIDChanged();
    partial void OnentityIDChanging(long value);
    partial void OnentityIDChanged();
    #endregion
		
		public ProductXrefEntity()
		{
			this._EntityItem = default(EntityRef<EntityItem>);
			this._ProductEntity = default(EntityRef<ProductEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._ProductEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entityID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long entityID
		{
			get
			{
				return this._entityID;
			}
			set
			{
				if ((this._entityID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnentityIDChanging(value);
					this.SendPropertyChanging();
					this._entityID = value;
					this.SendPropertyChanged("entityID");
					this.OnentityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ProductXrefEntity", Storage="_EntityItem", ThisKey="entityID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.ProductXrefEntities.Remove(this);
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.ProductXrefEntities.Add(this);
						this._entityID = value.entityID;
					}
					else
					{
						this._entityID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductEntity_ProductXrefEntity", Storage="_ProductEntity", ThisKey="productID", OtherKey="productID", IsForeignKey=true)]
		public ProductEntity ProductEntity
		{
			get
			{
				return this._ProductEntity.Entity;
			}
			set
			{
				ProductEntity previousValue = this._ProductEntity.Entity;
				if (((previousValue != value) 
							|| (this._ProductEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductEntity.Entity = null;
						previousValue.ProductXrefEntities.Remove(this);
					}
					this._ProductEntity.Entity = value;
					if ((value != null))
					{
						value.ProductXrefEntities.Add(this);
						this._productID = value.productID;
					}
					else
					{
						this._productID = default(long);
					}
					this.SendPropertyChanged("ProductEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductEntity")]
	public partial class ProductEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _productID;
		
		private short _productTypeID;
		
		private System.Nullable<decimal> _price1;
		
		private System.Nullable<decimal> _price2;
		
		private string _description;
		
		private EntitySet<ProductXrefEntity> _ProductXrefEntities;
		
		private EntityRef<ProductEntityShipping> _ProductEntityShipping;
		
		private EntityRef<EntityItem> _EntityItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIDChanging(long value);
    partial void OnproductIDChanged();
    partial void OnproductTypeIDChanging(short value);
    partial void OnproductTypeIDChanged();
    partial void Onprice1Changing(System.Nullable<decimal> value);
    partial void Onprice1Changed();
    partial void Onprice2Changing(System.Nullable<decimal> value);
    partial void Onprice2Changed();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public ProductEntity()
		{
			this._ProductXrefEntities = new EntitySet<ProductXrefEntity>(new Action<ProductXrefEntity>(this.attach_ProductXrefEntities), new Action<ProductXrefEntity>(this.detach_ProductXrefEntities));
			this._ProductEntityShipping = default(EntityRef<ProductEntityShipping>);
			this._EntityItem = default(EntityRef<EntityItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productTypeID", DbType="SmallInt NOT NULL")]
		public short productTypeID
		{
			get
			{
				return this._productTypeID;
			}
			set
			{
				if ((this._productTypeID != value))
				{
					this.OnproductTypeIDChanging(value);
					this.SendPropertyChanging();
					this._productTypeID = value;
					this.SendPropertyChanged("productTypeID");
					this.OnproductTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price1", DbType="Money")]
		public System.Nullable<decimal> price1
		{
			get
			{
				return this._price1;
			}
			set
			{
				if ((this._price1 != value))
				{
					this.Onprice1Changing(value);
					this.SendPropertyChanging();
					this._price1 = value;
					this.SendPropertyChanged("price1");
					this.Onprice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price2", DbType="Money")]
		public System.Nullable<decimal> price2
		{
			get
			{
				return this._price2;
			}
			set
			{
				if ((this._price2 != value))
				{
					this.Onprice2Changing(value);
					this.SendPropertyChanging();
					this._price2 = value;
					this.SendPropertyChanged("price2");
					this.Onprice2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductEntity_ProductXrefEntity", Storage="_ProductXrefEntities", ThisKey="productID", OtherKey="productID")]
		public EntitySet<ProductXrefEntity> ProductXrefEntities
		{
			get
			{
				return this._ProductXrefEntities;
			}
			set
			{
				this._ProductXrefEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductEntity_ProductEntityShipping", Storage="_ProductEntityShipping", ThisKey="productID", OtherKey="productID", IsUnique=true, IsForeignKey=false)]
		public ProductEntityShipping ProductEntityShipping
		{
			get
			{
				return this._ProductEntityShipping.Entity;
			}
			set
			{
				ProductEntityShipping previousValue = this._ProductEntityShipping.Entity;
				if (((previousValue != value) 
							|| (this._ProductEntityShipping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductEntityShipping.Entity = null;
						previousValue.ProductEntity = null;
					}
					this._ProductEntityShipping.Entity = value;
					if ((value != null))
					{
						value.ProductEntity = this;
					}
					this.SendPropertyChanged("ProductEntityShipping");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ProductEntity", Storage="_EntityItem", ThisKey="productID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.ProductEntity = null;
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.ProductEntity = this;
						this._productID = value.entityID;
					}
					else
					{
						this._productID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductXrefEntities(ProductXrefEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductEntity = this;
		}
		
		private void detach_ProductXrefEntities(ProductXrefEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductEntityShipping")]
	public partial class ProductEntityShipping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _productID;
		
		private int _shippingLocationID;
		
		private EntityRef<ProductEntity> _ProductEntity;
		
		private EntityRef<ShippingLocation> _ShippingLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIDChanging(long value);
    partial void OnproductIDChanged();
    partial void OnshippingLocationIDChanging(int value);
    partial void OnshippingLocationIDChanged();
    #endregion
		
		public ProductEntityShipping()
		{
			this._ProductEntity = default(EntityRef<ProductEntity>);
			this._ShippingLocation = default(EntityRef<ShippingLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._ProductEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingLocationID", DbType="Int NOT NULL")]
		public int shippingLocationID
		{
			get
			{
				return this._shippingLocationID;
			}
			set
			{
				if ((this._shippingLocationID != value))
				{
					if (this._ShippingLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshippingLocationIDChanging(value);
					this.SendPropertyChanging();
					this._shippingLocationID = value;
					this.SendPropertyChanged("shippingLocationID");
					this.OnshippingLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductEntity_ProductEntityShipping", Storage="_ProductEntity", ThisKey="productID", OtherKey="productID", IsForeignKey=true)]
		public ProductEntity ProductEntity
		{
			get
			{
				return this._ProductEntity.Entity;
			}
			set
			{
				ProductEntity previousValue = this._ProductEntity.Entity;
				if (((previousValue != value) 
							|| (this._ProductEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductEntity.Entity = null;
						previousValue.ProductEntityShipping = null;
					}
					this._ProductEntity.Entity = value;
					if ((value != null))
					{
						value.ProductEntityShipping = this;
						this._productID = value.productID;
					}
					else
					{
						this._productID = default(long);
					}
					this.SendPropertyChanged("ProductEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingLocation_ProductEntityShipping", Storage="_ShippingLocation", ThisKey="shippingLocationID", OtherKey="shippingLocationID", IsForeignKey=true)]
		public ShippingLocation ShippingLocation
		{
			get
			{
				return this._ShippingLocation.Entity;
			}
			set
			{
				ShippingLocation previousValue = this._ShippingLocation.Entity;
				if (((previousValue != value) 
							|| (this._ShippingLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingLocation.Entity = null;
						previousValue.ProductEntityShippings.Remove(this);
					}
					this._ShippingLocation.Entity = value;
					if ((value != null))
					{
						value.ProductEntityShippings.Add(this);
						this._shippingLocationID = value.shippingLocationID;
					}
					else
					{
						this._shippingLocationID = default(int);
					}
					this.SendPropertyChanged("ShippingLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShippingLocation")]
	public partial class ShippingLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _shippingLocationID;
		
		private string _title;
		
		private EntitySet<ProductEntityShipping> _ProductEntityShippings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnshippingLocationIDChanging(int value);
    partial void OnshippingLocationIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public ShippingLocation()
		{
			this._ProductEntityShippings = new EntitySet<ProductEntityShipping>(new Action<ProductEntityShipping>(this.attach_ProductEntityShippings), new Action<ProductEntityShipping>(this.detach_ProductEntityShippings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingLocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int shippingLocationID
		{
			get
			{
				return this._shippingLocationID;
			}
			set
			{
				if ((this._shippingLocationID != value))
				{
					this.OnshippingLocationIDChanging(value);
					this.SendPropertyChanging();
					this._shippingLocationID = value;
					this.SendPropertyChanged("shippingLocationID");
					this.OnshippingLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(128)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingLocation_ProductEntityShipping", Storage="_ProductEntityShippings", ThisKey="shippingLocationID", OtherKey="shippingLocationID")]
		public EntitySet<ProductEntityShipping> ProductEntityShippings
		{
			get
			{
				return this._ProductEntityShippings;
			}
			set
			{
				this._ProductEntityShippings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductEntityShippings(ProductEntityShipping entity)
		{
			this.SendPropertyChanging();
			entity.ShippingLocation = this;
		}
		
		private void detach_ProductEntityShippings(ProductEntityShipping entity)
		{
			this.SendPropertyChanging();
			entity.ShippingLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileEntity")]
	public partial class FileEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _fileID;
		
		private short _fileTypeID;
		
		private string _filePath;
		
		private string _alternateFilePath;
		
		private EntityRef<EntityItem> _EntityItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfileIDChanging(long value);
    partial void OnfileIDChanged();
    partial void OnfileTypeIDChanging(short value);
    partial void OnfileTypeIDChanged();
    partial void OnfilePathChanging(string value);
    partial void OnfilePathChanged();
    partial void OnalternateFilePathChanging(string value);
    partial void OnalternateFilePathChanged();
    #endregion
		
		public FileEntity()
		{
			this._EntityItem = default(EntityRef<EntityItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long fileID
		{
			get
			{
				return this._fileID;
			}
			set
			{
				if ((this._fileID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfileIDChanging(value);
					this.SendPropertyChanging();
					this._fileID = value;
					this.SendPropertyChanged("fileID");
					this.OnfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileTypeID", DbType="SmallInt NOT NULL")]
		public short fileTypeID
		{
			get
			{
				return this._fileTypeID;
			}
			set
			{
				if ((this._fileTypeID != value))
				{
					this.OnfileTypeIDChanging(value);
					this.SendPropertyChanging();
					this._fileTypeID = value;
					this.SendPropertyChanged("fileTypeID");
					this.OnfileTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filePath", DbType="NVarChar(2048)")]
		public string filePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnfilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("filePath");
					this.OnfilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alternateFilePath", DbType="NVarChar(2048)")]
		public string alternateFilePath
		{
			get
			{
				return this._alternateFilePath;
			}
			set
			{
				if ((this._alternateFilePath != value))
				{
					this.OnalternateFilePathChanging(value);
					this.SendPropertyChanging();
					this._alternateFilePath = value;
					this.SendPropertyChanged("alternateFilePath");
					this.OnalternateFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_FileEntity", Storage="_EntityItem", ThisKey="fileID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.FileEntity = null;
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.FileEntity = this;
						this._fileID = value.entityID;
					}
					else
					{
						this._fileID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
