#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.1
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MainEntity.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Aisha_real")]
	public partial class UserEntityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void Insertaspnet_User(MainEntity.Models.User.aspnet_User instance);
    partial void Updateaspnet_User(MainEntity.Models.User.aspnet_User instance);
    partial void Deleteaspnet_User(MainEntity.Models.User.aspnet_User instance);
    partial void Insertaspnet_Membership(MainEntity.Models.User.aspnet_Membership instance);
    partial void Updateaspnet_Membership(MainEntity.Models.User.aspnet_Membership instance);
    partial void Deleteaspnet_Membership(MainEntity.Models.User.aspnet_Membership instance);
    partial void Insertaspnet_Application(MainEntity.Models.User.aspnet_Application instance);
    partial void Updateaspnet_Application(MainEntity.Models.User.aspnet_Application instance);
    partial void Deleteaspnet_Application(MainEntity.Models.User.aspnet_Application instance);
    partial void InsertEntityItem(MainEntity.Models.User.EntityItem instance);
    partial void UpdateEntityItem(MainEntity.Models.User.EntityItem instance);
    partial void DeleteEntityItem(MainEntity.Models.User.EntityItem instance);
    partial void InsertSubscribePlanXref(MainEntity.Models.User.SubscribePlanXref instance);
    partial void UpdateSubscribePlanXref(MainEntity.Models.User.SubscribePlanXref instance);
    partial void DeleteSubscribePlanXref(MainEntity.Models.User.SubscribePlanXref instance);
    partial void InsertMembershipXrefReferrer(MainEntity.Models.User.MembershipXrefReferrer instance);
    partial void UpdateMembershipXrefReferrer(MainEntity.Models.User.MembershipXrefReferrer instance);
    partial void DeleteMembershipXrefReferrer(MainEntity.Models.User.MembershipXrefReferrer instance);
    partial void InsertProductEntity(MainEntity.Models.User.ProductEntity instance);
    partial void UpdateProductEntity(MainEntity.Models.User.ProductEntity instance);
    partial void DeleteProductEntity(MainEntity.Models.User.ProductEntity instance);
    partial void InsertMembershipAddress(MainEntity.Models.User.MembershipAddress instance);
    partial void UpdateMembershipAddress(MainEntity.Models.User.MembershipAddress instance);
    partial void DeleteMembershipAddress(MainEntity.Models.User.MembershipAddress instance);
    partial void InsertSubscribePlanEntity(MainEntity.Models.User.SubscribePlanEntity instance);
    partial void UpdateSubscribePlanEntity(MainEntity.Models.User.SubscribePlanEntity instance);
    partial void DeleteSubscribePlanEntity(MainEntity.Models.User.SubscribePlanEntity instance);
    partial void InsertMembership(MainEntity.Models.User.Membership instance);
    partial void UpdateMembership(MainEntity.Models.User.Membership instance);
    partial void DeleteMembership(MainEntity.Models.User.Membership instance);
    partial void InsertMembershipCart(MainEntity.Models.User.MembershipCart instance);
    partial void UpdateMembershipCart(MainEntity.Models.User.MembershipCart instance);
    partial void DeleteMembershipCart(MainEntity.Models.User.MembershipCart instance);
    partial void InsertMembershipCartState(MainEntity.Models.User.MembershipCartState instance);
    partial void UpdateMembershipCartState(MainEntity.Models.User.MembershipCartState instance);
    partial void DeleteMembershipCartState(MainEntity.Models.User.MembershipCartState instance);
    partial void InsertMembershipXrefSubscribePlan(MainEntity.Models.User.MembershipXrefSubscribePlan instance);
    partial void UpdateMembershipXrefSubscribePlan(MainEntity.Models.User.MembershipXrefSubscribePlan instance);
    partial void DeleteMembershipXrefSubscribePlan(MainEntity.Models.User.MembershipXrefSubscribePlan instance);
    partial void InsertShoppingMembershipAddress(MainEntity.Models.User.ShoppingMembershipAddress instance);
    partial void UpdateShoppingMembershipAddress(MainEntity.Models.User.ShoppingMembershipAddress instance);
    partial void DeleteShoppingMembershipAddress(MainEntity.Models.User.ShoppingMembershipAddress instance);
    partial void Insertaspnet_UsersInRole(MainEntity.Models.User.aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(MainEntity.Models.User.aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(MainEntity.Models.User.aspnet_UsersInRole instance);
    partial void Insertaspnet_Role(MainEntity.Models.User.aspnet_Role instance);
    partial void Updateaspnet_Role(MainEntity.Models.User.aspnet_Role instance);
    partial void Deleteaspnet_Role(MainEntity.Models.User.aspnet_Role instance);
    #endregion
		
		public UserEntityDataContext() : 
				base(global::MainEntity.Properties.Settings.Default.Aisha_realConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public UserEntityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserEntityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserEntityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserEntityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.EntityItem> EntityItems
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.EntityItem>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.SubscribePlanXref> SubscribePlanXrefs
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.SubscribePlanXref>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.MembershipXrefReferrer> MembershipXrefReferrers
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.MembershipXrefReferrer>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.ProductEntity> ProductEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.ProductEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.MembershipAddress> MembershipAddresses
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.MembershipAddress>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.SubscribePlanEntity> SubscribePlanEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.SubscribePlanEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.Membership> Memberships
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.Membership>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.MembershipCart> MembershipCarts
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.MembershipCart>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.MembershipCartState> MembershipCartStates
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.MembershipCartState>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.MembershipXrefSubscribePlan> MembershipXrefSubscribePlans
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.MembershipXrefSubscribePlan>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.ShoppingMembershipAddress> ShoppingMembershipAddresses
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.ShoppingMembershipAddress>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.User.aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<MainEntity.Models.User.aspnet_Role>();
			}
		}
	}
}
namespace MainEntity.Models.User
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<EntityItem> _EntityItems;
		
		private EntityRef<Membership> _Membership;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._EntityItems = new EntitySet<EntityItem>(new Action<EntityItem>(this.attach_EntityItems), new Action<EntityItem>(this.detach_EntityItems));
			this._Membership = default(EntityRef<Membership>);
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_EntityItem", Storage="_EntityItems", ThisKey="UserId", OtherKey="creatorID")]
		public EntitySet<EntityItem> EntityItems
		{
			get
			{
				return this._EntityItems;
			}
			set
			{
				this._EntityItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Membership", Storage="_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityItems(EntityItem entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_EntityItems(EntityItem entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityItem")]
	public partial class EntityItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _entityID;
		
		private long _rootEntityID;
		
		private long _parentEntityID;
		
		private int _typeID;
		
		private System.Guid _creatorID;
		
		private string _hierarchiID;
		
		private string _title;
		
		private int _sortOrder;
		
		private System.DateTime _createDate;
		
		private bool _deleted;
		
		private bool _active;
		
		private EntityRef<ProductEntity> _ProductEntity;
		
		private EntityRef<SubscribePlanEntity> _SubscribePlanEntity;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnentityIDChanging(long value);
    partial void OnentityIDChanged();
    partial void OnrootEntityIDChanging(long value);
    partial void OnrootEntityIDChanged();
    partial void OnparentEntityIDChanging(long value);
    partial void OnparentEntityIDChanged();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OncreatorIDChanging(System.Guid value);
    partial void OncreatorIDChanged();
    partial void OnhierarchiIDChanging(string value);
    partial void OnhierarchiIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnsortOrderChanging(int value);
    partial void OnsortOrderChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public EntityItem()
		{
			this._ProductEntity = default(EntityRef<ProductEntity>);
			this._SubscribePlanEntity = default(EntityRef<SubscribePlanEntity>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entityID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long entityID
		{
			get
			{
				return this._entityID;
			}
			set
			{
				if ((this._entityID != value))
				{
					this.OnentityIDChanging(value);
					this.SendPropertyChanging();
					this._entityID = value;
					this.SendPropertyChanged("entityID");
					this.OnentityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rootEntityID", DbType="BigInt NOT NULL")]
		public long rootEntityID
		{
			get
			{
				return this._rootEntityID;
			}
			set
			{
				if ((this._rootEntityID != value))
				{
					this.OnrootEntityIDChanging(value);
					this.SendPropertyChanging();
					this._rootEntityID = value;
					this.SendPropertyChanged("rootEntityID");
					this.OnrootEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentEntityID", DbType="BigInt NOT NULL")]
		public long parentEntityID
		{
			get
			{
				return this._parentEntityID;
			}
			set
			{
				if ((this._parentEntityID != value))
				{
					this.OnparentEntityIDChanging(value);
					this.SendPropertyChanging();
					this._parentEntityID = value;
					this.SendPropertyChanged("parentEntityID");
					this.OnparentEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL")]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creatorID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid creatorID
		{
			get
			{
				return this._creatorID;
			}
			set
			{
				if ((this._creatorID != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncreatorIDChanging(value);
					this.SendPropertyChanging();
					this._creatorID = value;
					this.SendPropertyChanged("creatorID");
					this.OncreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hierarchiID", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string hierarchiID
		{
			get
			{
				return this._hierarchiID;
			}
			set
			{
				if ((this._hierarchiID != value))
				{
					this.OnhierarchiIDChanging(value);
					this.SendPropertyChanging();
					this._hierarchiID = value;
					this.SendPropertyChanged("hierarchiID");
					this.OnhierarchiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortOrder", DbType="Int NOT NULL")]
		public int sortOrder
		{
			get
			{
				return this._sortOrder;
			}
			set
			{
				if ((this._sortOrder != value))
				{
					this.OnsortOrderChanging(value);
					this.SendPropertyChanging();
					this._sortOrder = value;
					this.SendPropertyChanged("sortOrder");
					this.OnsortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ProductEntity", Storage="_ProductEntity", ThisKey="entityID", OtherKey="productID", IsUnique=true, IsForeignKey=false)]
		public ProductEntity ProductEntity
		{
			get
			{
				return this._ProductEntity.Entity;
			}
			set
			{
				ProductEntity previousValue = this._ProductEntity.Entity;
				if (((previousValue != value) 
							|| (this._ProductEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductEntity.Entity = null;
						previousValue.EntityItem = null;
					}
					this._ProductEntity.Entity = value;
					if ((value != null))
					{
						value.EntityItem = this;
					}
					this.SendPropertyChanged("ProductEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_SubscribePlanEntity", Storage="_SubscribePlanEntity", ThisKey="entityID", OtherKey="subscribePlanID", IsUnique=true, IsForeignKey=false)]
		public SubscribePlanEntity SubscribePlanEntity
		{
			get
			{
				return this._SubscribePlanEntity.Entity;
			}
			set
			{
				SubscribePlanEntity previousValue = this._SubscribePlanEntity.Entity;
				if (((previousValue != value) 
							|| (this._SubscribePlanEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubscribePlanEntity.Entity = null;
						previousValue.EntityItem = null;
					}
					this._SubscribePlanEntity.Entity = value;
					if ((value != null))
					{
						value.EntityItem = this;
					}
					this.SendPropertyChanged("SubscribePlanEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_EntityItem", Storage="_aspnet_User", ThisKey="creatorID", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.EntityItems.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.EntityItems.Add(this);
						this._creatorID = value.UserId;
					}
					else
					{
						this._creatorID = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubscribePlanXref")]
	public partial class SubscribePlanXref : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _subscribePlanID;
		
		private long _nextSubscribePlanID;
		
		private EntityRef<SubscribePlanEntity> _SubscribePlanEntity;
		
		private EntityRef<SubscribePlanEntity> _SubscribePlanEntity1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsubscribePlanIDChanging(long value);
    partial void OnsubscribePlanIDChanged();
    partial void OnnextSubscribePlanIDChanging(long value);
    partial void OnnextSubscribePlanIDChanged();
    #endregion
		
		public SubscribePlanXref()
		{
			this._SubscribePlanEntity = default(EntityRef<SubscribePlanEntity>);
			this._SubscribePlanEntity1 = default(EntityRef<SubscribePlanEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscribePlanID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long subscribePlanID
		{
			get
			{
				return this._subscribePlanID;
			}
			set
			{
				if ((this._subscribePlanID != value))
				{
					if (this._SubscribePlanEntity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubscribePlanIDChanging(value);
					this.SendPropertyChanging();
					this._subscribePlanID = value;
					this.SendPropertyChanged("subscribePlanID");
					this.OnsubscribePlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nextSubscribePlanID", DbType="BigInt NOT NULL")]
		public long nextSubscribePlanID
		{
			get
			{
				return this._nextSubscribePlanID;
			}
			set
			{
				if ((this._nextSubscribePlanID != value))
				{
					if (this._SubscribePlanEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnextSubscribePlanIDChanging(value);
					this.SendPropertyChanging();
					this._nextSubscribePlanID = value;
					this.SendPropertyChanged("nextSubscribePlanID");
					this.OnnextSubscribePlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscribePlanEntity_SubscribePlanXref", Storage="_SubscribePlanEntity", ThisKey="nextSubscribePlanID", OtherKey="subscribePlanID", IsForeignKey=true)]
		public SubscribePlanEntity SubscribePlanEntity
		{
			get
			{
				return this._SubscribePlanEntity.Entity;
			}
			set
			{
				SubscribePlanEntity previousValue = this._SubscribePlanEntity.Entity;
				if (((previousValue != value) 
							|| (this._SubscribePlanEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubscribePlanEntity.Entity = null;
						previousValue.SubscribePlanXrefs.Remove(this);
					}
					this._SubscribePlanEntity.Entity = value;
					if ((value != null))
					{
						value.SubscribePlanXrefs.Add(this);
						this._nextSubscribePlanID = value.subscribePlanID;
					}
					else
					{
						this._nextSubscribePlanID = default(long);
					}
					this.SendPropertyChanged("SubscribePlanEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscribePlanEntity_SubscribePlanXref1", Storage="_SubscribePlanEntity1", ThisKey="subscribePlanID", OtherKey="subscribePlanID", IsForeignKey=true)]
		public SubscribePlanEntity SubscribePlanEntity1
		{
			get
			{
				return this._SubscribePlanEntity1.Entity;
			}
			set
			{
				SubscribePlanEntity previousValue = this._SubscribePlanEntity1.Entity;
				if (((previousValue != value) 
							|| (this._SubscribePlanEntity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubscribePlanEntity1.Entity = null;
						previousValue.SubscribePlanXref = null;
					}
					this._SubscribePlanEntity1.Entity = value;
					if ((value != null))
					{
						value.SubscribePlanXref = this;
						this._subscribePlanID = value.subscribePlanID;
					}
					else
					{
						this._subscribePlanID = default(long);
					}
					this.SendPropertyChanged("SubscribePlanEntity1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembershipXrefReferrer")]
	public partial class MembershipXrefReferrer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _referrerCode;
		
		private string _referredBy;
		
		private string _lastRefer;
		
		private EntityRef<Membership> _Membership;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnreferrerCodeChanging(string value);
    partial void OnreferrerCodeChanged();
    partial void OnreferredByChanging(string value);
    partial void OnreferredByChanged();
    partial void OnlastReferChanging(string value);
    partial void OnlastReferChanged();
    #endregion
		
		public MembershipXrefReferrer()
		{
			this._Membership = default(EntityRef<Membership>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referrerCode", DbType="NVarChar(256)")]
		public string referrerCode
		{
			get
			{
				return this._referrerCode;
			}
			set
			{
				if ((this._referrerCode != value))
				{
					this.OnreferrerCodeChanging(value);
					this.SendPropertyChanging();
					this._referrerCode = value;
					this.SendPropertyChanged("referrerCode");
					this.OnreferrerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referredBy", DbType="NVarChar(256)")]
		public string referredBy
		{
			get
			{
				return this._referredBy;
			}
			set
			{
				if ((this._referredBy != value))
				{
					this.OnreferredByChanging(value);
					this.SendPropertyChanging();
					this._referredBy = value;
					this.SendPropertyChanged("referredBy");
					this.OnreferredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastRefer", DbType="NVarChar(256)")]
		public string lastRefer
		{
			get
			{
				return this._lastRefer;
			}
			set
			{
				if ((this._lastRefer != value))
				{
					this.OnlastReferChanging(value);
					this.SendPropertyChanging();
					this._lastRefer = value;
					this.SendPropertyChanged("lastRefer");
					this.OnlastReferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MembershipXrefReferrer", Storage="_Membership", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.MembershipXrefReferrer = null;
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.MembershipXrefReferrer = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductEntity")]
	public partial class ProductEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _productID;
		
		private short _productTypeID;
		
		private System.Nullable<decimal> _price1;
		
		private System.Nullable<decimal> _price2;
		
		private string _description;
		
		private bool _unlimitedAccessInLibrary;
		
		private EntityRef<EntityItem> _EntityItem;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIDChanging(long value);
    partial void OnproductIDChanged();
    partial void OnproductTypeIDChanging(short value);
    partial void OnproductTypeIDChanged();
    partial void Onprice1Changing(System.Nullable<decimal> value);
    partial void Onprice1Changed();
    partial void Onprice2Changing(System.Nullable<decimal> value);
    partial void Onprice2Changed();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnunlimitedAccessInLibraryChanging(bool value);
    partial void OnunlimitedAccessInLibraryChanged();
    #endregion
		
		public ProductEntity()
		{
			this._EntityItem = default(EntityRef<EntityItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productTypeID", DbType="SmallInt NOT NULL")]
		public short productTypeID
		{
			get
			{
				return this._productTypeID;
			}
			set
			{
				if ((this._productTypeID != value))
				{
					this.OnproductTypeIDChanging(value);
					this.SendPropertyChanging();
					this._productTypeID = value;
					this.SendPropertyChanged("productTypeID");
					this.OnproductTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price1", DbType="Money")]
		public System.Nullable<decimal> price1
		{
			get
			{
				return this._price1;
			}
			set
			{
				if ((this._price1 != value))
				{
					this.Onprice1Changing(value);
					this.SendPropertyChanging();
					this._price1 = value;
					this.SendPropertyChanged("price1");
					this.Onprice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price2", DbType="Money")]
		public System.Nullable<decimal> price2
		{
			get
			{
				return this._price2;
			}
			set
			{
				if ((this._price2 != value))
				{
					this.Onprice2Changing(value);
					this.SendPropertyChanging();
					this._price2 = value;
					this.SendPropertyChanged("price2");
					this.Onprice2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unlimitedAccessInLibrary", DbType="Bit NO NULL")]
		public bool unlimitedAccessInLibrary
		{
			get
			{
				return this._unlimitedAccessInLibrary;
			}
			set
			{
				if ((this._unlimitedAccessInLibrary != value))
				{
					this.OnunlimitedAccessInLibraryChanging(value);
					this.SendPropertyChanging();
					this._unlimitedAccessInLibrary = value;
					this.SendPropertyChanged("unlimitedAccessInLibrary");
					this.OnunlimitedAccessInLibraryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ProductEntity", Storage="_EntityItem", ThisKey="productID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.ProductEntity = null;
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.ProductEntity = this;
						this._productID = value.entityID;
					}
					else
					{
						this._productID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembershipAddress")]
	public partial class MembershipAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _addressID;
		
		private System.Guid _UserId;
		
		private bool _isBillingAddress;
		
		private string _country;
		
		private string _postalCode;
		
		private string _state;
		
		private string _city;
		
		private string _postalAdderss;
		
		private string _phone;
		
		private string _dayPhone;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _description;
		
		private EntitySet<ShoppingMembershipAddress> _ShoppingMembershipAddresses;
		
		private EntityRef<Membership> _Membership;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaddressIDChanging(long value);
    partial void OnaddressIDChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnisBillingAddressChanging(bool value);
    partial void OnisBillingAddressChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpostalAddressChanging(string value);
    partial void OnpostalAddressChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OndayPhoneChanging(string value);
    partial void OndayPhoneChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public MembershipAddress()
		{
			this._ShoppingMembershipAddresses = new EntitySet<ShoppingMembershipAddress>(new Action<ShoppingMembershipAddress>(this.attach_ShoppingMembershipAddresses), new Action<ShoppingMembershipAddress>(this.detach_ShoppingMembershipAddresses));
			this._Membership = default(EntityRef<Membership>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long addressID
		{
			get
			{
				return this._addressID;
			}
			set
			{
				if ((this._addressID != value))
				{
					this.OnaddressIDChanging(value);
					this.SendPropertyChanging();
					this._addressID = value;
					this.SendPropertyChanged("addressID");
					this.OnaddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isBillingAddress", DbType="Bit NOT NULL")]
		public bool isBillingAddress
		{
			get
			{
				return this._isBillingAddress;
			}
			set
			{
				if ((this._isBillingAddress != value))
				{
					this.OnisBillingAddressChanging(value);
					this.SendPropertyChanging();
					this._isBillingAddress = value;
					this.SendPropertyChanged("isBillingAddress");
					this.OnisBillingAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="NVarChar(64)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(16)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(256)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="postalAdderss", Storage="_postalAdderss", DbType="NVarChar(256)")]
		public string postalAddress
		{
			get
			{
				return this._postalAdderss;
			}
			set
			{
				if ((this._postalAdderss != value))
				{
					this.OnpostalAddressChanging(value);
					this.SendPropertyChanging();
					this._postalAdderss = value;
					this.SendPropertyChanged("postalAddress");
					this.OnpostalAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(256)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dayPhone", DbType="NVarChar(256)")]
		public string dayPhone
		{
			get
			{
				return this._dayPhone;
			}
			set
			{
				if ((this._dayPhone != value))
				{
					this.OndayPhoneChanging(value);
					this.SendPropertyChanging();
					this._dayPhone = value;
					this.SendPropertyChanged("dayPhone");
					this.OndayPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(128)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(128)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipAddress_ShoppingMembershipAddress", Storage="_ShoppingMembershipAddresses", ThisKey="addressID", OtherKey="addressID")]
		public EntitySet<ShoppingMembershipAddress> ShoppingMembershipAddresses
		{
			get
			{
				return this._ShoppingMembershipAddresses;
			}
			set
			{
				this._ShoppingMembershipAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MembershipAddress", Storage="_Membership", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.MembershipAddresses.Remove(this);
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.MembershipAddresses.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShoppingMembershipAddresses(ShoppingMembershipAddress entity)
		{
			this.SendPropertyChanging();
			entity.MembershipAddress = this;
		}
		
		private void detach_ShoppingMembershipAddresses(ShoppingMembershipAddress entity)
		{
			this.SendPropertyChanging();
			entity.MembershipAddress = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubscribePlanEntity")]
	public partial class SubscribePlanEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _subscribePlanID;
		
		private short _durationInDays;
		
		private short _durationInMonths;
		
		private int _freeUnitsOnSubscribe;
		
		private int _freeOfferCnt;
		
		private string _description;
		
		private EntitySet<SubscribePlanXref> _SubscribePlanXrefs;
		
		private EntityRef<SubscribePlanXref> _SubscribePlanXref;
		
		private EntitySet<MembershipXrefSubscribePlan> _MembershipXrefSubscribePlans;
		
		private EntityRef<EntityItem> _EntityItem;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsubscribePlanIDChanging(long value);
    partial void OnsubscribePlanIDChanged();
    partial void OndurationInDaysChanging(short value);
    partial void OndurationInDaysChanged();
    partial void OndurationInMonthsChanging(short value);
    partial void OndurationInMonthsChanged();
    partial void OnfreeUnitsOnSubscribeChanging(int value);
    partial void OnfreeUnitsOnSubscribeChanged();
    partial void OnfreeOfferCntChanging(int value);
    partial void OnfreeOfferCntChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public SubscribePlanEntity()
		{
			this._SubscribePlanXrefs = new EntitySet<SubscribePlanXref>(new Action<SubscribePlanXref>(this.attach_SubscribePlanXrefs), new Action<SubscribePlanXref>(this.detach_SubscribePlanXrefs));
			this._SubscribePlanXref = default(EntityRef<SubscribePlanXref>);
			this._MembershipXrefSubscribePlans = new EntitySet<MembershipXrefSubscribePlan>(new Action<MembershipXrefSubscribePlan>(this.attach_MembershipXrefSubscribePlans), new Action<MembershipXrefSubscribePlan>(this.detach_MembershipXrefSubscribePlans));
			this._EntityItem = default(EntityRef<EntityItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscribePlanID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long subscribePlanID
		{
			get
			{
				return this._subscribePlanID;
			}
			set
			{
				if ((this._subscribePlanID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubscribePlanIDChanging(value);
					this.SendPropertyChanging();
					this._subscribePlanID = value;
					this.SendPropertyChanged("subscribePlanID");
					this.OnsubscribePlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durationInDays", DbType="SmallInt NOT NULL")]
		public short durationInDays
		{
			get
			{
				return this._durationInDays;
			}
			set
			{
				if ((this._durationInDays != value))
				{
					this.OndurationInDaysChanging(value);
					this.SendPropertyChanging();
					this._durationInDays = value;
					this.SendPropertyChanged("durationInDays");
					this.OndurationInDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durationInMonths", DbType="SmallInt NOT NULL")]
		public short durationInMonths
		{
			get
			{
				return this._durationInMonths;
			}
			set
			{
				if ((this._durationInMonths != value))
				{
					this.OndurationInMonthsChanging(value);
					this.SendPropertyChanging();
					this._durationInMonths = value;
					this.SendPropertyChanged("durationInMonths");
					this.OndurationInMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_freeUnitsOnSubscribe", DbType="Int NOT NULL")]
		public int freeUnitsOnSubscribe
		{
			get
			{
				return this._freeUnitsOnSubscribe;
			}
			set
			{
				if ((this._freeUnitsOnSubscribe != value))
				{
					this.OnfreeUnitsOnSubscribeChanging(value);
					this.SendPropertyChanging();
					this._freeUnitsOnSubscribe = value;
					this.SendPropertyChanged("freeUnitsOnSubscribe");
					this.OnfreeUnitsOnSubscribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_freeOfferCnt", DbType="Int NOT NULL")]
		public int freeOfferCnt
		{
			get
			{
				return this._freeOfferCnt;
			}
			set
			{
				if ((this._freeOfferCnt != value))
				{
					this.OnfreeOfferCntChanging(value);
					this.SendPropertyChanging();
					this._freeOfferCnt = value;
					this.SendPropertyChanged("freeOfferCnt");
					this.OnfreeOfferCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1024)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscribePlanEntity_SubscribePlanXref", Storage="_SubscribePlanXrefs", ThisKey="subscribePlanID", OtherKey="nextSubscribePlanID")]
		public EntitySet<SubscribePlanXref> SubscribePlanXrefs
		{
			get
			{
				return this._SubscribePlanXrefs;
			}
			set
			{
				this._SubscribePlanXrefs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscribePlanEntity_SubscribePlanXref1", Storage="_SubscribePlanXref", ThisKey="subscribePlanID", OtherKey="subscribePlanID", IsUnique=true, IsForeignKey=false)]
		public SubscribePlanXref SubscribePlanXref
		{
			get
			{
				return this._SubscribePlanXref.Entity;
			}
			set
			{
				SubscribePlanXref previousValue = this._SubscribePlanXref.Entity;
				if (((previousValue != value) 
							|| (this._SubscribePlanXref.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubscribePlanXref.Entity = null;
						previousValue.SubscribePlanEntity1 = null;
					}
					this._SubscribePlanXref.Entity = value;
					if ((value != null))
					{
						value.SubscribePlanEntity1 = this;
					}
					this.SendPropertyChanged("SubscribePlanXref");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscribePlanEntity_MembershipXrefSubscribePlan", Storage="_MembershipXrefSubscribePlans", ThisKey="subscribePlanID", OtherKey="subscribePlanID")]
		public EntitySet<MembershipXrefSubscribePlan> MembershipXrefSubscribePlans
		{
			get
			{
				return this._MembershipXrefSubscribePlans;
			}
			set
			{
				this._MembershipXrefSubscribePlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_SubscribePlanEntity", Storage="_EntityItem", ThisKey="subscribePlanID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.SubscribePlanEntity = null;
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.SubscribePlanEntity = this;
						this._subscribePlanID = value.entityID;
					}
					else
					{
						this._subscribePlanID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubscribePlanXrefs(SubscribePlanXref entity)
		{
			this.SendPropertyChanging();
			entity.SubscribePlanEntity = this;
		}
		
		private void detach_SubscribePlanXrefs(SubscribePlanXref entity)
		{
			this.SendPropertyChanging();
			entity.SubscribePlanEntity = null;
		}
		
		private void attach_MembershipXrefSubscribePlans(MembershipXrefSubscribePlan entity)
		{
			this.SendPropertyChanging();
			entity.SubscribePlanEntity = this;
		}
		
		private void detach_MembershipXrefSubscribePlans(MembershipXrefSubscribePlan entity)
		{
			this.SendPropertyChanging();
			entity.SubscribePlanEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Membership")]
	public partial class Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private bool _activatedCart;
		
		private System.Nullable<System.DateTime> _activationCartDate;
		
		private decimal _balance;
		
		private string _firstName;
		
		private string _lastName;
		
		private int _freeOfferCnt;
		
		private string _refferedBy;
		
		private string _country;
		
		private string _postalCode;
		
		private string _state;
		
		private string _city;
		
		private string _postalAdderss;
		
		private string _phone;
		
		private string _dayPhone;
		
		private System.Nullable<System.DateTime> _subscribeActivation;
		
		private System.Nullable<byte> _chargeDay;
		
		private bool _suspended;
		
		private bool _fullLibraryAccess;
		
		private EntityRef<MembershipXrefReferrer> _MembershipXrefReferrer;
		
		private EntitySet<MembershipAddress> _MembershipAddresses;
		
		private EntitySet<MembershipCart> _MembershipCarts;
		
		private EntityRef<MembershipXrefSubscribePlan> _MembershipXrefSubscribePlan;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnactivatedCartChanging(bool value);
    partial void OnactivatedCartChanged();
    partial void OnactivationCartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnactivationCartDateChanged();
    partial void OnbalanceChanging(decimal value);
    partial void OnbalanceChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnfreeOfferCntChanging(int value);
    partial void OnfreeOfferCntChanged();
    partial void OnrefferedByChanging(string value);
    partial void OnrefferedByChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpostalAdderssChanging(string value);
    partial void OnpostalAdderssChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OndayPhoneChanging(string value);
    partial void OndayPhoneChanged();
    partial void OnsubscribeActivationChanging(System.Nullable<System.DateTime> value);
    partial void OnsubscribeActivationChanged();
    partial void OnchargeDayChanging(System.Nullable<byte> value);
    partial void OnchargeDayChanged();
    partial void OnsuspendedChanging(bool value);
    partial void OnsuspendedChanged();
    partial void OnfullLibraryAccessChanging(bool value);
    partial void OnfullLibraryAccessChanged();
    #endregion
		
		public Membership()
		{
			this._MembershipXrefReferrer = default(EntityRef<MembershipXrefReferrer>);
			this._MembershipAddresses = new EntitySet<MembershipAddress>(new Action<MembershipAddress>(this.attach_MembershipAddresses), new Action<MembershipAddress>(this.detach_MembershipAddresses));
			this._MembershipCarts = new EntitySet<MembershipCart>(new Action<MembershipCart>(this.attach_MembershipCarts), new Action<MembershipCart>(this.detach_MembershipCarts));
			this._MembershipXrefSubscribePlan = default(EntityRef<MembershipXrefSubscribePlan>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activatedCart", DbType="Bit NOT NULL")]
		public bool activatedCart
		{
			get
			{
				return this._activatedCart;
			}
			set
			{
				if ((this._activatedCart != value))
				{
					this.OnactivatedCartChanging(value);
					this.SendPropertyChanging();
					this._activatedCart = value;
					this.SendPropertyChanged("activatedCart");
					this.OnactivatedCartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activationCartDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> activationCartDate
		{
			get
			{
				return this._activationCartDate;
			}
			set
			{
				if ((this._activationCartDate != value))
				{
					this.OnactivationCartDateChanging(value);
					this.SendPropertyChanging();
					this._activationCartDate = value;
					this.SendPropertyChanged("activationCartDate");
					this.OnactivationCartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Money NOT NULL")]
		public decimal balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(256)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(256)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_freeOfferCnt", DbType="Int NOT NULL")]
		public int freeOfferCnt
		{
			get
			{
				return this._freeOfferCnt;
			}
			set
			{
				if ((this._freeOfferCnt != value))
				{
					this.OnfreeOfferCntChanging(value);
					this.SendPropertyChanging();
					this._freeOfferCnt = value;
					this.SendPropertyChanged("freeOfferCnt");
					this.OnfreeOfferCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_refferedBy", DbType="NVarChar(256)")]
		public string refferedBy
		{
			get
			{
				return this._refferedBy;
			}
			set
			{
				if ((this._refferedBy != value))
				{
					this.OnrefferedByChanging(value);
					this.SendPropertyChanging();
					this._refferedBy = value;
					this.SendPropertyChanged("refferedBy");
					this.OnrefferedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(256)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="NVarChar(64)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(16)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(256)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalAdderss", DbType="NVarChar(256)")]
		public string postalAdderss
		{
			get
			{
				return this._postalAdderss;
			}
			set
			{
				if ((this._postalAdderss != value))
				{
					this.OnpostalAdderssChanging(value);
					this.SendPropertyChanging();
					this._postalAdderss = value;
					this.SendPropertyChanged("postalAdderss");
					this.OnpostalAdderssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(256)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dayPhone", DbType="NVarChar(256)")]
		public string dayPhone
		{
			get
			{
				return this._dayPhone;
			}
			set
			{
				if ((this._dayPhone != value))
				{
					this.OndayPhoneChanging(value);
					this.SendPropertyChanging();
					this._dayPhone = value;
					this.SendPropertyChanged("dayPhone");
					this.OndayPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscribeActivation", DbType="DateTime")]
		public System.Nullable<System.DateTime> subscribeActivation
		{
			get
			{
				return this._subscribeActivation;
			}
			set
			{
				if ((this._subscribeActivation != value))
				{
					this.OnsubscribeActivationChanging(value);
					this.SendPropertyChanging();
					this._subscribeActivation = value;
					this.SendPropertyChanged("subscribeActivation");
					this.OnsubscribeActivationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chargeDay", DbType="TinyInt")]
		public System.Nullable<byte> chargeDay
		{
			get
			{
				return this._chargeDay;
			}
			set
			{
				if ((this._chargeDay != value))
				{
					this.OnchargeDayChanging(value);
					this.SendPropertyChanging();
					this._chargeDay = value;
					this.SendPropertyChanged("chargeDay");
					this.OnchargeDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suspended", DbType="Bit NOT NULL")]
		public bool suspended
		{
			get
			{
				return this._suspended;
			}
			set
			{
				if ((this._suspended != value))
				{
					this.OnsuspendedChanging(value);
					this.SendPropertyChanging();
					this._suspended = value;
					this.SendPropertyChanged("suspended");
					this.OnsuspendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullLibraryAccess", DbType="Bit No NULL")]
		public bool fullLibraryAccess
		{
			get
			{
				return this._fullLibraryAccess;
			}
			set
			{
				if ((this._fullLibraryAccess != value))
				{
					this.OnfullLibraryAccessChanging(value);
					this.SendPropertyChanging();
					this._fullLibraryAccess = value;
					this.SendPropertyChanged("fullLibraryAccess");
					this.OnfullLibraryAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MembershipXrefReferrer", Storage="_MembershipXrefReferrer", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public MembershipXrefReferrer MembershipXrefReferrer
		{
			get
			{
				return this._MembershipXrefReferrer.Entity;
			}
			set
			{
				MembershipXrefReferrer previousValue = this._MembershipXrefReferrer.Entity;
				if (((previousValue != value) 
							|| (this._MembershipXrefReferrer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MembershipXrefReferrer.Entity = null;
						previousValue.Membership = null;
					}
					this._MembershipXrefReferrer.Entity = value;
					if ((value != null))
					{
						value.Membership = this;
					}
					this.SendPropertyChanged("MembershipXrefReferrer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MembershipAddress", Storage="_MembershipAddresses", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<MembershipAddress> MembershipAddresses
		{
			get
			{
				return this._MembershipAddresses;
			}
			set
			{
				this._MembershipAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MembershipCart", Storage="_MembershipCarts", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<MembershipCart> MembershipCarts
		{
			get
			{
				return this._MembershipCarts;
			}
			set
			{
				this._MembershipCarts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MembershipXrefSubscribePlan", Storage="_MembershipXrefSubscribePlan", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public MembershipXrefSubscribePlan MembershipXrefSubscribePlan
		{
			get
			{
				return this._MembershipXrefSubscribePlan.Entity;
			}
			set
			{
				MembershipXrefSubscribePlan previousValue = this._MembershipXrefSubscribePlan.Entity;
				if (((previousValue != value) 
							|| (this._MembershipXrefSubscribePlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MembershipXrefSubscribePlan.Entity = null;
						previousValue.Membership = null;
					}
					this._MembershipXrefSubscribePlan.Entity = value;
					if ((value != null))
					{
						value.Membership = this;
					}
					this.SendPropertyChanged("MembershipXrefSubscribePlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MembershipAddresses(MembershipAddress entity)
		{
			this.SendPropertyChanging();
			entity.Membership = this;
		}
		
		private void detach_MembershipAddresses(MembershipAddress entity)
		{
			this.SendPropertyChanging();
			entity.Membership = null;
		}
		
		private void attach_MembershipCarts(MembershipCart entity)
		{
			this.SendPropertyChanging();
			entity.Membership = this;
		}
		
		private void detach_MembershipCarts(MembershipCart entity)
		{
			this.SendPropertyChanging();
			entity.Membership = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembershipCart")]
	public partial class MembershipCart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _membershipCartID;
		
		private System.Guid _UserId;
		
		private long _cartStateID;
		
		private System.Nullable<System.DateTime> _expirationDate;
		
		private string _cartTypeID;
		
		private string _tranID;
		
		private System.Nullable<long> _shoppingTransactionID;
		
		private EntityRef<Membership> _Membership;
		
		private EntityRef<MembershipCartState> _MembershipCartState;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmembershipCartIDChanging(string value);
    partial void OnmembershipCartIDChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OncartStateIDChanging(long value);
    partial void OncartStateIDChanged();
    partial void OnexpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpirationDateChanged();
    partial void OncartTypeIDChanging(string value);
    partial void OncartTypeIDChanged();
    partial void OntranIDChanging(string value);
    partial void OntranIDChanged();
    partial void OnshoppingTransactionIDChanging(System.Nullable<long> value);
    partial void OnshoppingTransactionIDChanged();
    #endregion
		
		public MembershipCart()
		{
			this._Membership = default(EntityRef<Membership>);
			this._MembershipCartState = default(EntityRef<MembershipCartState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_membershipCartID", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string membershipCartID
		{
			get
			{
				return this._membershipCartID;
			}
			set
			{
				if ((this._membershipCartID != value))
				{
					this.OnmembershipCartIDChanging(value);
					this.SendPropertyChanging();
					this._membershipCartID = value;
					this.SendPropertyChanged("membershipCartID");
					this.OnmembershipCartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartStateID", DbType="BigInt NOT NULL")]
		public long cartStateID
		{
			get
			{
				return this._cartStateID;
			}
			set
			{
				if ((this._cartStateID != value))
				{
					if (this._MembershipCartState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncartStateIDChanging(value);
					this.SendPropertyChanging();
					this._cartStateID = value;
					this.SendPropertyChanged("cartStateID");
					this.OncartStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expirationDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> expirationDate
		{
			get
			{
				return this._expirationDate;
			}
			set
			{
				if ((this._expirationDate != value))
				{
					this.OnexpirationDateChanging(value);
					this.SendPropertyChanging();
					this._expirationDate = value;
					this.SendPropertyChanged("expirationDate");
					this.OnexpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartTypeID", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string cartTypeID
		{
			get
			{
				return this._cartTypeID;
			}
			set
			{
				if ((this._cartTypeID != value))
				{
					this.OncartTypeIDChanging(value);
					this.SendPropertyChanging();
					this._cartTypeID = value;
					this.SendPropertyChanged("cartTypeID");
					this.OncartTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tranID", DbType="VarChar(64)")]
		public string tranID
		{
			get
			{
				return this._tranID;
			}
			set
			{
				if ((this._tranID != value))
				{
					this.OntranIDChanging(value);
					this.SendPropertyChanging();
					this._tranID = value;
					this.SendPropertyChanged("tranID");
					this.OntranIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingTransactionID", DbType="BigInt")]
		public System.Nullable<long> shoppingTransactionID
		{
			get
			{
				return this._shoppingTransactionID;
			}
			set
			{
				if ((this._shoppingTransactionID != value))
				{
					this.OnshoppingTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingTransactionID = value;
					this.SendPropertyChanged("shoppingTransactionID");
					this.OnshoppingTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MembershipCart", Storage="_Membership", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.MembershipCarts.Remove(this);
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.MembershipCarts.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipCartState_MembershipCart", Storage="_MembershipCartState", ThisKey="cartStateID", OtherKey="cartStateID", IsForeignKey=true)]
		public MembershipCartState MembershipCartState
		{
			get
			{
				return this._MembershipCartState.Entity;
			}
			set
			{
				MembershipCartState previousValue = this._MembershipCartState.Entity;
				if (((previousValue != value) 
							|| (this._MembershipCartState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MembershipCartState.Entity = null;
						previousValue.MembershipCarts.Remove(this);
					}
					this._MembershipCartState.Entity = value;
					if ((value != null))
					{
						value.MembershipCarts.Add(this);
						this._cartStateID = value.cartStateID;
					}
					else
					{
						this._cartStateID = default(long);
					}
					this.SendPropertyChanged("MembershipCartState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembershipCartState")]
	public partial class MembershipCartState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _cartStateID;
		
		private string _description;
		
		private EntitySet<MembershipCart> _MembershipCarts;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncartStateIDChanging(long value);
    partial void OncartStateIDChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public MembershipCartState()
		{
			this._MembershipCarts = new EntitySet<MembershipCart>(new Action<MembershipCart>(this.attach_MembershipCarts), new Action<MembershipCart>(this.detach_MembershipCarts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartStateID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long cartStateID
		{
			get
			{
				return this._cartStateID;
			}
			set
			{
				if ((this._cartStateID != value))
				{
					this.OncartStateIDChanging(value);
					this.SendPropertyChanging();
					this._cartStateID = value;
					this.SendPropertyChanged("cartStateID");
					this.OncartStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(256)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipCartState_MembershipCart", Storage="_MembershipCarts", ThisKey="cartStateID", OtherKey="cartStateID")]
		public EntitySet<MembershipCart> MembershipCarts
		{
			get
			{
				return this._MembershipCarts;
			}
			set
			{
				this._MembershipCarts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MembershipCarts(MembershipCart entity)
		{
			this.SendPropertyChanging();
			entity.MembershipCartState = this;
		}
		
		private void detach_MembershipCarts(MembershipCart entity)
		{
			this.SendPropertyChanging();
			entity.MembershipCartState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembershipXrefSubscribePlan")]
	public partial class MembershipXrefSubscribePlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private long _subscribePlanID;
		
		private System.Nullable<System.DateTime> _startSubscribeDate;
		
		private System.Nullable<System.DateTime> _endSubscribeDate;
		
		private bool _cancelSubscribe;
		
		private System.Nullable<System.DateTime> _activationDate;
		
		private bool _declineSubscribe;
		
		private byte _activationFailCnt;
		
		private EntityRef<SubscribePlanEntity> _SubscribePlanEntity;
		
		private EntityRef<Membership> _Membership;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnsubscribePlanIDChanging(long value);
    partial void OnsubscribePlanIDChanged();
    partial void OnstartSubscribeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnstartSubscribeDateChanged();
    partial void OnendSubscribeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnendSubscribeDateChanged();
    partial void OncancelSubscribeChanging(bool value);
    partial void OncancelSubscribeChanged();
    partial void OnactivationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnactivationDateChanged();
    partial void OndeclineSubscribeChanging(bool value);
    partial void OndeclineSubscribeChanged();
    partial void OnactivationFailCntChanging(byte value);
    partial void OnactivationFailCntChanged();
    #endregion
		
		public MembershipXrefSubscribePlan()
		{
			this._SubscribePlanEntity = default(EntityRef<SubscribePlanEntity>);
			this._Membership = default(EntityRef<Membership>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscribePlanID", DbType="BigInt NOT NULL")]
		public long subscribePlanID
		{
			get
			{
				return this._subscribePlanID;
			}
			set
			{
				if ((this._subscribePlanID != value))
				{
					if (this._SubscribePlanEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubscribePlanIDChanging(value);
					this.SendPropertyChanging();
					this._subscribePlanID = value;
					this.SendPropertyChanged("subscribePlanID");
					this.OnsubscribePlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startSubscribeDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> startSubscribeDate
		{
			get
			{
				return this._startSubscribeDate;
			}
			set
			{
				if ((this._startSubscribeDate != value))
				{
					this.OnstartSubscribeDateChanging(value);
					this.SendPropertyChanging();
					this._startSubscribeDate = value;
					this.SendPropertyChanged("startSubscribeDate");
					this.OnstartSubscribeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endSubscribeDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> endSubscribeDate
		{
			get
			{
				return this._endSubscribeDate;
			}
			set
			{
				if ((this._endSubscribeDate != value))
				{
					this.OnendSubscribeDateChanging(value);
					this.SendPropertyChanging();
					this._endSubscribeDate = value;
					this.SendPropertyChanged("endSubscribeDate");
					this.OnendSubscribeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelSubscribe", DbType="Bit NOT NULL")]
		public bool cancelSubscribe
		{
			get
			{
				return this._cancelSubscribe;
			}
			set
			{
				if ((this._cancelSubscribe != value))
				{
					this.OncancelSubscribeChanging(value);
					this.SendPropertyChanging();
					this._cancelSubscribe = value;
					this.SendPropertyChanged("cancelSubscribe");
					this.OncancelSubscribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> activationDate
		{
			get
			{
				return this._activationDate;
			}
			set
			{
				if ((this._activationDate != value))
				{
					this.OnactivationDateChanging(value);
					this.SendPropertyChanging();
					this._activationDate = value;
					this.SendPropertyChanged("activationDate");
					this.OnactivationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_declineSubscribe", DbType="Bit NOT NULL")]
		public bool declineSubscribe
		{
			get
			{
				return this._declineSubscribe;
			}
			set
			{
				if ((this._declineSubscribe != value))
				{
					this.OndeclineSubscribeChanging(value);
					this.SendPropertyChanging();
					this._declineSubscribe = value;
					this.SendPropertyChanged("declineSubscribe");
					this.OndeclineSubscribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activationFailCnt", DbType="TinyInt NOT NULL")]
		public byte activationFailCnt
		{
			get
			{
				return this._activationFailCnt;
			}
			set
			{
				if ((this._activationFailCnt != value))
				{
					this.OnactivationFailCntChanging(value);
					this.SendPropertyChanging();
					this._activationFailCnt = value;
					this.SendPropertyChanged("activationFailCnt");
					this.OnactivationFailCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscribePlanEntity_MembershipXrefSubscribePlan", Storage="_SubscribePlanEntity", ThisKey="subscribePlanID", OtherKey="subscribePlanID", IsForeignKey=true)]
		public SubscribePlanEntity SubscribePlanEntity
		{
			get
			{
				return this._SubscribePlanEntity.Entity;
			}
			set
			{
				SubscribePlanEntity previousValue = this._SubscribePlanEntity.Entity;
				if (((previousValue != value) 
							|| (this._SubscribePlanEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubscribePlanEntity.Entity = null;
						previousValue.MembershipXrefSubscribePlans.Remove(this);
					}
					this._SubscribePlanEntity.Entity = value;
					if ((value != null))
					{
						value.MembershipXrefSubscribePlans.Add(this);
						this._subscribePlanID = value.subscribePlanID;
					}
					else
					{
						this._subscribePlanID = default(long);
					}
					this.SendPropertyChanged("SubscribePlanEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MembershipXrefSubscribePlan", Storage="_Membership", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.MembershipXrefSubscribePlan = null;
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.MembershipXrefSubscribePlan = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingMembershipAddress")]
	public partial class ShoppingMembershipAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _shoppingTransactionID;
		
		private long _addressID;
		
		private EntityRef<MembershipAddress> _MembershipAddress;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnshoppingTransactionIDChanging(long value);
    partial void OnshoppingTransactionIDChanged();
    partial void OnaddressIDChanging(long value);
    partial void OnaddressIDChanged();
    #endregion
		
		public ShoppingMembershipAddress()
		{
			this._MembershipAddress = default(EntityRef<MembershipAddress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingTransactionID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long shoppingTransactionID
		{
			get
			{
				return this._shoppingTransactionID;
			}
			set
			{
				if ((this._shoppingTransactionID != value))
				{
					this.OnshoppingTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingTransactionID = value;
					this.SendPropertyChanged("shoppingTransactionID");
					this.OnshoppingTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressID", DbType="BigInt NOT NULL")]
		public long addressID
		{
			get
			{
				return this._addressID;
			}
			set
			{
				if ((this._addressID != value))
				{
					if (this._MembershipAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaddressIDChanging(value);
					this.SendPropertyChanging();
					this._addressID = value;
					this.SendPropertyChanged("addressID");
					this.OnaddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipAddress_ShoppingMembershipAddress", Storage="_MembershipAddress", ThisKey="addressID", OtherKey="addressID", IsForeignKey=true)]
		public MembershipAddress MembershipAddress
		{
			get
			{
				return this._MembershipAddress.Entity;
			}
			set
			{
				MembershipAddress previousValue = this._MembershipAddress.Entity;
				if (((previousValue != value) 
							|| (this._MembershipAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MembershipAddress.Entity = null;
						previousValue.ShoppingMembershipAddresses.Remove(this);
					}
					this._MembershipAddress.Entity = value;
					if ((value != null))
					{
						value.ShoppingMembershipAddresses.Add(this);
						this._addressID = value.addressID;
					}
					else
					{
						this._addressID = default(long);
					}
					this.SendPropertyChanged("MembershipAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
