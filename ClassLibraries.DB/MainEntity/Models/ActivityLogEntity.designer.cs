#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MainEntity.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Aisha_real")]
	public partial class ActivityLogEntityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActivityLogXrefUser(MainEntity.Models.Activity.ActivityLogXrefUser instance);
    partial void UpdateActivityLogXrefUser(MainEntity.Models.Activity.ActivityLogXrefUser instance);
    partial void DeleteActivityLogXrefUser(MainEntity.Models.Activity.ActivityLogXrefUser instance);
    partial void InsertActivityLogType(MainEntity.Models.Activity.ActivityLogType instance);
    partial void UpdateActivityLogType(MainEntity.Models.Activity.ActivityLogType instance);
    partial void DeleteActivityLogType(MainEntity.Models.Activity.ActivityLogType instance);
    partial void InsertActivityLogXrefEmail(MainEntity.Models.Activity.ActivityLogXrefEmail instance);
    partial void UpdateActivityLogXrefEmail(MainEntity.Models.Activity.ActivityLogXrefEmail instance);
    partial void DeleteActivityLogXrefEmail(MainEntity.Models.Activity.ActivityLogXrefEmail instance);
    partial void InsertActivityLogXrefEntityItem(MainEntity.Models.Activity.ActivityLogXrefEntityItem instance);
    partial void UpdateActivityLogXrefEntityItem(MainEntity.Models.Activity.ActivityLogXrefEntityItem instance);
    partial void DeleteActivityLogXrefEntityItem(MainEntity.Models.Activity.ActivityLogXrefEntityItem instance);
    partial void InsertActivityLogXrefShopping(MainEntity.Models.Activity.ActivityLogXrefShopping instance);
    partial void UpdateActivityLogXrefShopping(MainEntity.Models.Activity.ActivityLogXrefShopping instance);
    partial void DeleteActivityLogXrefShopping(MainEntity.Models.Activity.ActivityLogXrefShopping instance);
    partial void InsertActivityLog(MainEntity.Models.Activity.ActivityLog instance);
    partial void UpdateActivityLog(MainEntity.Models.Activity.ActivityLog instance);
    partial void DeleteActivityLog(MainEntity.Models.Activity.ActivityLog instance);
    partial void InsertEmail(MainEntity.Models.Activity.Email instance);
    partial void UpdateEmail(MainEntity.Models.Activity.Email instance);
    partial void DeleteEmail(MainEntity.Models.Activity.Email instance);
    partial void InsertEntityItem(MainEntity.Models.Activity.EntityItem instance);
    partial void UpdateEntityItem(MainEntity.Models.Activity.EntityItem instance);
    partial void DeleteEntityItem(MainEntity.Models.Activity.EntityItem instance);
    partial void InsertClassEntity(MainEntity.Models.Activity.ClassEntity instance);
    partial void UpdateClassEntity(MainEntity.Models.Activity.ClassEntity instance);
    partial void DeleteClassEntity(MainEntity.Models.Activity.ClassEntity instance);
    partial void InsertProductEntity(MainEntity.Models.Activity.ProductEntity instance);
    partial void UpdateProductEntity(MainEntity.Models.Activity.ProductEntity instance);
    partial void DeleteProductEntity(MainEntity.Models.Activity.ProductEntity instance);
    partial void InsertMembership(MainEntity.Models.Activity.Membership instance);
    partial void UpdateMembership(MainEntity.Models.Activity.Membership instance);
    partial void DeleteMembership(MainEntity.Models.Activity.Membership instance);
    #endregion
		
		public ActivityLogEntityDataContext() : 
				base(global::MainEntity.Properties.Settings.Default.Aisha_realConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ActivityLogEntityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ActivityLogEntityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ActivityLogEntityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ActivityLogEntityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Activity.ActivityLogXrefUser> ActivityLogXrefUsers
		{
			get
			{
				return this.GetTable<MainEntity.Models.Activity.ActivityLogXrefUser>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Activity.ActivityLogType> ActivityLogTypes
		{
			get
			{
				return this.GetTable<MainEntity.Models.Activity.ActivityLogType>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Activity.ActivityLogXrefEmail> ActivityLogXrefEmails
		{
			get
			{
				return this.GetTable<MainEntity.Models.Activity.ActivityLogXrefEmail>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Activity.ActivityLogXrefEntityItem> ActivityLogXrefEntityItems
		{
			get
			{
				return this.GetTable<MainEntity.Models.Activity.ActivityLogXrefEntityItem>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Activity.ActivityLogXrefShopping> ActivityLogXrefShoppings
		{
			get
			{
				return this.GetTable<MainEntity.Models.Activity.ActivityLogXrefShopping>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Activity.ActivityLog> ActivityLogs
		{
			get
			{
				return this.GetTable<MainEntity.Models.Activity.ActivityLog>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Activity.Email> Emails
		{
			get
			{
				return this.GetTable<MainEntity.Models.Activity.Email>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Activity.EntityItem> EntityItems
		{
			get
			{
				return this.GetTable<MainEntity.Models.Activity.EntityItem>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Activity.ClassEntity> ClassEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.Activity.ClassEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Activity.ProductEntity> ProductEntities
		{
			get
			{
				return this.GetTable<MainEntity.Models.Activity.ProductEntity>();
			}
		}
		
		public System.Data.Linq.Table<MainEntity.Models.Activity.Membership> Memberships
		{
			get
			{
				return this.GetTable<MainEntity.Models.Activity.Membership>();
			}
		}
	}
}
namespace MainEntity.Models.Activity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityLogXrefUsers")]
	public partial class ActivityLogXrefUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _activityLogID;
		
		private System.Guid _UserId;
		
		private EntityRef<ActivityLog> _ActivityLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactivityLogIDChanging(long value);
    partial void OnactivityLogIDChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    #endregion
		
		public ActivityLogXrefUser()
		{
			this._ActivityLog = default(EntityRef<ActivityLog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityLogID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long activityLogID
		{
			get
			{
				return this._activityLogID;
			}
			set
			{
				if ((this._activityLogID != value))
				{
					if (this._ActivityLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactivityLogIDChanging(value);
					this.SendPropertyChanging();
					this._activityLogID = value;
					this.SendPropertyChanged("activityLogID");
					this.OnactivityLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityLog_ActivityLogXrefUser", Storage="_ActivityLog", ThisKey="activityLogID", OtherKey="activityLogID", IsForeignKey=true)]
		public ActivityLog ActivityLog
		{
			get
			{
				return this._ActivityLog.Entity;
			}
			set
			{
				ActivityLog previousValue = this._ActivityLog.Entity;
				if (((previousValue != value) 
							|| (this._ActivityLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityLog.Entity = null;
						previousValue.ActivityLogXrefUsers.Remove(this);
					}
					this._ActivityLog.Entity = value;
					if ((value != null))
					{
						value.ActivityLogXrefUsers.Add(this);
						this._activityLogID = value.activityLogID;
					}
					else
					{
						this._activityLogID = default(long);
					}
					this.SendPropertyChanged("ActivityLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityLogType")]
	public partial class ActivityLogType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _activityLogTypeID;
		
		private string _name;
		
		private EntitySet<ActivityLog> _ActivityLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactivityLogTypeIDChanging(short value);
    partial void OnactivityLogTypeIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public ActivityLogType()
		{
			this._ActivityLogs = new EntitySet<ActivityLog>(new Action<ActivityLog>(this.attach_ActivityLogs), new Action<ActivityLog>(this.detach_ActivityLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityLogTypeID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short activityLogTypeID
		{
			get
			{
				return this._activityLogTypeID;
			}
			set
			{
				if ((this._activityLogTypeID != value))
				{
					this.OnactivityLogTypeIDChanging(value);
					this.SendPropertyChanging();
					this._activityLogTypeID = value;
					this.SendPropertyChanged("activityLogTypeID");
					this.OnactivityLogTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityLogType_ActivityLog", Storage="_ActivityLogs", ThisKey="activityLogTypeID", OtherKey="activityLogTypeID")]
		public EntitySet<ActivityLog> ActivityLogs
		{
			get
			{
				return this._ActivityLogs;
			}
			set
			{
				this._ActivityLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityLogs(ActivityLog entity)
		{
			this.SendPropertyChanging();
			entity.ActivityLogType = this;
		}
		
		private void detach_ActivityLogs(ActivityLog entity)
		{
			this.SendPropertyChanging();
			entity.ActivityLogType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityLogXrefEmail")]
	public partial class ActivityLogXrefEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _emailID;
		
		private long _activityLogID;
		
		private EntityRef<ActivityLog> _ActivityLog;
		
		private EntityRef<Email> _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailIDChanging(int value);
    partial void OnemailIDChanged();
    partial void OnactivityLogIDChanging(long value);
    partial void OnactivityLogIDChanged();
    #endregion
		
		public ActivityLogXrefEmail()
		{
			this._ActivityLog = default(EntityRef<ActivityLog>);
			this._Email = default(EntityRef<Email>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int emailID
		{
			get
			{
				return this._emailID;
			}
			set
			{
				if ((this._emailID != value))
				{
					if (this._Email.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailIDChanging(value);
					this.SendPropertyChanging();
					this._emailID = value;
					this.SendPropertyChanged("emailID");
					this.OnemailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityLogID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long activityLogID
		{
			get
			{
				return this._activityLogID;
			}
			set
			{
				if ((this._activityLogID != value))
				{
					if (this._ActivityLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactivityLogIDChanging(value);
					this.SendPropertyChanging();
					this._activityLogID = value;
					this.SendPropertyChanged("activityLogID");
					this.OnactivityLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityLog_ActivityLogXrefEmail", Storage="_ActivityLog", ThisKey="activityLogID", OtherKey="activityLogID", IsForeignKey=true)]
		public ActivityLog ActivityLog
		{
			get
			{
				return this._ActivityLog.Entity;
			}
			set
			{
				ActivityLog previousValue = this._ActivityLog.Entity;
				if (((previousValue != value) 
							|| (this._ActivityLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityLog.Entity = null;
						previousValue.ActivityLogXrefEmails.Remove(this);
					}
					this._ActivityLog.Entity = value;
					if ((value != null))
					{
						value.ActivityLogXrefEmails.Add(this);
						this._activityLogID = value.activityLogID;
					}
					else
					{
						this._activityLogID = default(long);
					}
					this.SendPropertyChanged("ActivityLog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Email_ActivityLogXrefEmail", Storage="_Email", ThisKey="emailID", OtherKey="emailID", IsForeignKey=true)]
		public Email Email
		{
			get
			{
				return this._Email.Entity;
			}
			set
			{
				Email previousValue = this._Email.Entity;
				if (((previousValue != value) 
							|| (this._Email.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Email.Entity = null;
						previousValue.ActivityLogXrefEmails.Remove(this);
					}
					this._Email.Entity = value;
					if ((value != null))
					{
						value.ActivityLogXrefEmails.Add(this);
						this._emailID = value.emailID;
					}
					else
					{
						this._emailID = default(int);
					}
					this.SendPropertyChanged("Email");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityLogXrefEntityItem")]
	public partial class ActivityLogXrefEntityItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _activityLogID;
		
		private long _entityID;
		
		private EntityRef<ActivityLog> _ActivityLog;
		
		private EntityRef<EntityItem> _EntityItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactivityLogIDChanging(long value);
    partial void OnactivityLogIDChanged();
    partial void OnentityIDChanging(long value);
    partial void OnentityIDChanged();
    #endregion
		
		public ActivityLogXrefEntityItem()
		{
			this._ActivityLog = default(EntityRef<ActivityLog>);
			this._EntityItem = default(EntityRef<EntityItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityLogID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long activityLogID
		{
			get
			{
				return this._activityLogID;
			}
			set
			{
				if ((this._activityLogID != value))
				{
					if (this._ActivityLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactivityLogIDChanging(value);
					this.SendPropertyChanging();
					this._activityLogID = value;
					this.SendPropertyChanged("activityLogID");
					this.OnactivityLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entityID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long entityID
		{
			get
			{
				return this._entityID;
			}
			set
			{
				if ((this._entityID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnentityIDChanging(value);
					this.SendPropertyChanging();
					this._entityID = value;
					this.SendPropertyChanged("entityID");
					this.OnentityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityLog_ActivityLogXrefEntityItem", Storage="_ActivityLog", ThisKey="activityLogID", OtherKey="activityLogID", IsForeignKey=true)]
		public ActivityLog ActivityLog
		{
			get
			{
				return this._ActivityLog.Entity;
			}
			set
			{
				ActivityLog previousValue = this._ActivityLog.Entity;
				if (((previousValue != value) 
							|| (this._ActivityLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityLog.Entity = null;
						previousValue.ActivityLogXrefEntityItems.Remove(this);
					}
					this._ActivityLog.Entity = value;
					if ((value != null))
					{
						value.ActivityLogXrefEntityItems.Add(this);
						this._activityLogID = value.activityLogID;
					}
					else
					{
						this._activityLogID = default(long);
					}
					this.SendPropertyChanged("ActivityLog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ActivityLogXrefEntityItem", Storage="_EntityItem", ThisKey="entityID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.ActivityLogXrefEntityItems.Remove(this);
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.ActivityLogXrefEntityItems.Add(this);
						this._entityID = value.entityID;
					}
					else
					{
						this._entityID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityLogXrefShopping")]
	public partial class ActivityLogXrefShopping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _shoppingID;
		
		private long _activityLogID;
		
		private EntityRef<ActivityLog> _ActivityLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnshoppingIDChanging(long value);
    partial void OnshoppingIDChanged();
    partial void OnactivityLogIDChanging(long value);
    partial void OnactivityLogIDChanged();
    #endregion
		
		public ActivityLogXrefShopping()
		{
			this._ActivityLog = default(EntityRef<ActivityLog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoppingID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long shoppingID
		{
			get
			{
				return this._shoppingID;
			}
			set
			{
				if ((this._shoppingID != value))
				{
					this.OnshoppingIDChanging(value);
					this.SendPropertyChanging();
					this._shoppingID = value;
					this.SendPropertyChanged("shoppingID");
					this.OnshoppingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityLogID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long activityLogID
		{
			get
			{
				return this._activityLogID;
			}
			set
			{
				if ((this._activityLogID != value))
				{
					if (this._ActivityLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactivityLogIDChanging(value);
					this.SendPropertyChanging();
					this._activityLogID = value;
					this.SendPropertyChanged("activityLogID");
					this.OnactivityLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityLog_ActivityLogXrefShopping", Storage="_ActivityLog", ThisKey="activityLogID", OtherKey="activityLogID", IsForeignKey=true)]
		public ActivityLog ActivityLog
		{
			get
			{
				return this._ActivityLog.Entity;
			}
			set
			{
				ActivityLog previousValue = this._ActivityLog.Entity;
				if (((previousValue != value) 
							|| (this._ActivityLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityLog.Entity = null;
						previousValue.ActivityLogXrefShoppings.Remove(this);
					}
					this._ActivityLog.Entity = value;
					if ((value != null))
					{
						value.ActivityLogXrefShoppings.Add(this);
						this._activityLogID = value.activityLogID;
					}
					else
					{
						this._activityLogID = default(long);
					}
					this.SendPropertyChanged("ActivityLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityLog")]
	public partial class ActivityLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _activityLogID;
		
		private short _activityLogTypeID;
		
		private System.Nullable<System.DateTime> _createDate;
		
		private string _requestIP;
		
		private EntitySet<ActivityLogXrefUser> _ActivityLogXrefUsers;
		
		private EntitySet<ActivityLogXrefEmail> _ActivityLogXrefEmails;
		
		private EntitySet<ActivityLogXrefEntityItem> _ActivityLogXrefEntityItems;
		
		private EntitySet<ActivityLogXrefShopping> _ActivityLogXrefShoppings;
		
		private EntityRef<ActivityLogType> _ActivityLogType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactivityLogIDChanging(long value);
    partial void OnactivityLogIDChanged();
    partial void OnactivityLogTypeIDChanging(short value);
    partial void OnactivityLogTypeIDChanged();
    partial void OncreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OncreateDateChanged();
    partial void OnrequestIPChanging(string value);
    partial void OnrequestIPChanged();
    #endregion
		
		public ActivityLog()
		{
			this._ActivityLogXrefUsers = new EntitySet<ActivityLogXrefUser>(new Action<ActivityLogXrefUser>(this.attach_ActivityLogXrefUsers), new Action<ActivityLogXrefUser>(this.detach_ActivityLogXrefUsers));
			this._ActivityLogXrefEmails = new EntitySet<ActivityLogXrefEmail>(new Action<ActivityLogXrefEmail>(this.attach_ActivityLogXrefEmails), new Action<ActivityLogXrefEmail>(this.detach_ActivityLogXrefEmails));
			this._ActivityLogXrefEntityItems = new EntitySet<ActivityLogXrefEntityItem>(new Action<ActivityLogXrefEntityItem>(this.attach_ActivityLogXrefEntityItems), new Action<ActivityLogXrefEntityItem>(this.detach_ActivityLogXrefEntityItems));
			this._ActivityLogXrefShoppings = new EntitySet<ActivityLogXrefShopping>(new Action<ActivityLogXrefShopping>(this.attach_ActivityLogXrefShoppings), new Action<ActivityLogXrefShopping>(this.detach_ActivityLogXrefShoppings));
			this._ActivityLogType = default(EntityRef<ActivityLogType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityLogID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long activityLogID
		{
			get
			{
				return this._activityLogID;
			}
			set
			{
				if ((this._activityLogID != value))
				{
					this.OnactivityLogIDChanging(value);
					this.SendPropertyChanging();
					this._activityLogID = value;
					this.SendPropertyChanged("activityLogID");
					this.OnactivityLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityLogTypeID", DbType="SmallInt NOT NULL")]
		public short activityLogTypeID
		{
			get
			{
				return this._activityLogTypeID;
			}
			set
			{
				if ((this._activityLogTypeID != value))
				{
					if (this._ActivityLogType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactivityLogTypeIDChanging(value);
					this.SendPropertyChanging();
					this._activityLogTypeID = value;
					this.SendPropertyChanged("activityLogTypeID");
					this.OnactivityLogTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requestIP", DbType="VarChar(64)")]
		public string requestIP
		{
			get
			{
				return this._requestIP;
			}
			set
			{
				if ((this._requestIP != value))
				{
					this.OnrequestIPChanging(value);
					this.SendPropertyChanging();
					this._requestIP = value;
					this.SendPropertyChanged("requestIP");
					this.OnrequestIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityLog_ActivityLogXrefUser", Storage="_ActivityLogXrefUsers", ThisKey="activityLogID", OtherKey="activityLogID")]
		public EntitySet<ActivityLogXrefUser> ActivityLogXrefUsers
		{
			get
			{
				return this._ActivityLogXrefUsers;
			}
			set
			{
				this._ActivityLogXrefUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityLog_ActivityLogXrefEmail", Storage="_ActivityLogXrefEmails", ThisKey="activityLogID", OtherKey="activityLogID")]
		public EntitySet<ActivityLogXrefEmail> ActivityLogXrefEmails
		{
			get
			{
				return this._ActivityLogXrefEmails;
			}
			set
			{
				this._ActivityLogXrefEmails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityLog_ActivityLogXrefEntityItem", Storage="_ActivityLogXrefEntityItems", ThisKey="activityLogID", OtherKey="activityLogID")]
		public EntitySet<ActivityLogXrefEntityItem> ActivityLogXrefEntityItems
		{
			get
			{
				return this._ActivityLogXrefEntityItems;
			}
			set
			{
				this._ActivityLogXrefEntityItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityLog_ActivityLogXrefShopping", Storage="_ActivityLogXrefShoppings", ThisKey="activityLogID", OtherKey="activityLogID")]
		public EntitySet<ActivityLogXrefShopping> ActivityLogXrefShoppings
		{
			get
			{
				return this._ActivityLogXrefShoppings;
			}
			set
			{
				this._ActivityLogXrefShoppings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityLogType_ActivityLog", Storage="_ActivityLogType", ThisKey="activityLogTypeID", OtherKey="activityLogTypeID", IsForeignKey=true)]
		public ActivityLogType ActivityLogType
		{
			get
			{
				return this._ActivityLogType.Entity;
			}
			set
			{
				ActivityLogType previousValue = this._ActivityLogType.Entity;
				if (((previousValue != value) 
							|| (this._ActivityLogType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityLogType.Entity = null;
						previousValue.ActivityLogs.Remove(this);
					}
					this._ActivityLogType.Entity = value;
					if ((value != null))
					{
						value.ActivityLogs.Add(this);
						this._activityLogTypeID = value.activityLogTypeID;
					}
					else
					{
						this._activityLogTypeID = default(short);
					}
					this.SendPropertyChanged("ActivityLogType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityLogXrefUsers(ActivityLogXrefUser entity)
		{
			this.SendPropertyChanging();
			entity.ActivityLog = this;
		}
		
		private void detach_ActivityLogXrefUsers(ActivityLogXrefUser entity)
		{
			this.SendPropertyChanging();
			entity.ActivityLog = null;
		}
		
		private void attach_ActivityLogXrefEmails(ActivityLogXrefEmail entity)
		{
			this.SendPropertyChanging();
			entity.ActivityLog = this;
		}
		
		private void detach_ActivityLogXrefEmails(ActivityLogXrefEmail entity)
		{
			this.SendPropertyChanging();
			entity.ActivityLog = null;
		}
		
		private void attach_ActivityLogXrefEntityItems(ActivityLogXrefEntityItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityLog = this;
		}
		
		private void detach_ActivityLogXrefEntityItems(ActivityLogXrefEntityItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityLog = null;
		}
		
		private void attach_ActivityLogXrefShoppings(ActivityLogXrefShopping entity)
		{
			this.SendPropertyChanging();
			entity.ActivityLog = this;
		}
		
		private void detach_ActivityLogXrefShoppings(ActivityLogXrefShopping entity)
		{
			this.SendPropertyChanging();
			entity.ActivityLog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Email")]
	public partial class Email : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _emailID;
		
		private string _email1;
		
		private EntitySet<ActivityLogXrefEmail> _ActivityLogXrefEmails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailIDChanging(int value);
    partial void OnemailIDChanged();
    partial void Onemail1Changing(string value);
    partial void Onemail1Changed();
    #endregion
		
		public Email()
		{
			this._ActivityLogXrefEmails = new EntitySet<ActivityLogXrefEmail>(new Action<ActivityLogXrefEmail>(this.attach_ActivityLogXrefEmails), new Action<ActivityLogXrefEmail>(this.detach_ActivityLogXrefEmails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int emailID
		{
			get
			{
				return this._emailID;
			}
			set
			{
				if ((this._emailID != value))
				{
					this.OnemailIDChanging(value);
					this.SendPropertyChanging();
					this._emailID = value;
					this.SendPropertyChanged("emailID");
					this.OnemailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email", Storage="_email1", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string email1
		{
			get
			{
				return this._email1;
			}
			set
			{
				if ((this._email1 != value))
				{
					this.Onemail1Changing(value);
					this.SendPropertyChanging();
					this._email1 = value;
					this.SendPropertyChanged("email1");
					this.Onemail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Email_ActivityLogXrefEmail", Storage="_ActivityLogXrefEmails", ThisKey="emailID", OtherKey="emailID")]
		public EntitySet<ActivityLogXrefEmail> ActivityLogXrefEmails
		{
			get
			{
				return this._ActivityLogXrefEmails;
			}
			set
			{
				this._ActivityLogXrefEmails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityLogXrefEmails(ActivityLogXrefEmail entity)
		{
			this.SendPropertyChanging();
			entity.Email = this;
		}
		
		private void detach_ActivityLogXrefEmails(ActivityLogXrefEmail entity)
		{
			this.SendPropertyChanging();
			entity.Email = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityItem")]
	public partial class EntityItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _entityID;
		
		private long _rootEntityID;
		
		private long _parentEntityID;
		
		private int _typeID;
		
		private System.Guid _creatorID;
		
		private string _hierarchiID;
		
		private string _title;
		
		private int _sortOrder;
		
		private System.DateTime _createDate;
		
		private bool _deleted;
		
		private bool _active;
		
		private EntitySet<ActivityLogXrefEntityItem> _ActivityLogXrefEntityItems;
		
		private EntityRef<ClassEntity> _ClassEntity;
		
		private EntityRef<ProductEntity> _ProductEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnentityIDChanging(long value);
    partial void OnentityIDChanged();
    partial void OnrootEntityIDChanging(long value);
    partial void OnrootEntityIDChanged();
    partial void OnparentEntityIDChanging(long value);
    partial void OnparentEntityIDChanged();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OncreatorIDChanging(System.Guid value);
    partial void OncreatorIDChanged();
    partial void OnhierarchiIDChanging(string value);
    partial void OnhierarchiIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnsortOrderChanging(int value);
    partial void OnsortOrderChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public EntityItem()
		{
			this._ActivityLogXrefEntityItems = new EntitySet<ActivityLogXrefEntityItem>(new Action<ActivityLogXrefEntityItem>(this.attach_ActivityLogXrefEntityItems), new Action<ActivityLogXrefEntityItem>(this.detach_ActivityLogXrefEntityItems));
			this._ClassEntity = default(EntityRef<ClassEntity>);
			this._ProductEntity = default(EntityRef<ProductEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entityID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long entityID
		{
			get
			{
				return this._entityID;
			}
			set
			{
				if ((this._entityID != value))
				{
					this.OnentityIDChanging(value);
					this.SendPropertyChanging();
					this._entityID = value;
					this.SendPropertyChanged("entityID");
					this.OnentityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rootEntityID", DbType="BigInt NOT NULL")]
		public long rootEntityID
		{
			get
			{
				return this._rootEntityID;
			}
			set
			{
				if ((this._rootEntityID != value))
				{
					this.OnrootEntityIDChanging(value);
					this.SendPropertyChanging();
					this._rootEntityID = value;
					this.SendPropertyChanged("rootEntityID");
					this.OnrootEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentEntityID", DbType="BigInt NOT NULL")]
		public long parentEntityID
		{
			get
			{
				return this._parentEntityID;
			}
			set
			{
				if ((this._parentEntityID != value))
				{
					this.OnparentEntityIDChanging(value);
					this.SendPropertyChanging();
					this._parentEntityID = value;
					this.SendPropertyChanged("parentEntityID");
					this.OnparentEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL")]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creatorID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid creatorID
		{
			get
			{
				return this._creatorID;
			}
			set
			{
				if ((this._creatorID != value))
				{
					this.OncreatorIDChanging(value);
					this.SendPropertyChanging();
					this._creatorID = value;
					this.SendPropertyChanged("creatorID");
					this.OncreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hierarchiID", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string hierarchiID
		{
			get
			{
				return this._hierarchiID;
			}
			set
			{
				if ((this._hierarchiID != value))
				{
					this.OnhierarchiIDChanging(value);
					this.SendPropertyChanging();
					this._hierarchiID = value;
					this.SendPropertyChanged("hierarchiID");
					this.OnhierarchiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortOrder", DbType="Int NOT NULL")]
		public int sortOrder
		{
			get
			{
				return this._sortOrder;
			}
			set
			{
				if ((this._sortOrder != value))
				{
					this.OnsortOrderChanging(value);
					this.SendPropertyChanging();
					this._sortOrder = value;
					this.SendPropertyChanged("sortOrder");
					this.OnsortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ActivityLogXrefEntityItem", Storage="_ActivityLogXrefEntityItems", ThisKey="entityID", OtherKey="entityID")]
		public EntitySet<ActivityLogXrefEntityItem> ActivityLogXrefEntityItems
		{
			get
			{
				return this._ActivityLogXrefEntityItems;
			}
			set
			{
				this._ActivityLogXrefEntityItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ClassEntity", Storage="_ClassEntity", ThisKey="entityID", OtherKey="classID", IsUnique=true, IsForeignKey=false)]
		public ClassEntity ClassEntity
		{
			get
			{
				return this._ClassEntity.Entity;
			}
			set
			{
				ClassEntity previousValue = this._ClassEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClassEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassEntity.Entity = null;
						previousValue.EntityItem = null;
					}
					this._ClassEntity.Entity = value;
					if ((value != null))
					{
						value.EntityItem = this;
					}
					this.SendPropertyChanged("ClassEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ProductEntity", Storage="_ProductEntity", ThisKey="entityID", OtherKey="productID", IsUnique=true, IsForeignKey=false)]
		public ProductEntity ProductEntity
		{
			get
			{
				return this._ProductEntity.Entity;
			}
			set
			{
				ProductEntity previousValue = this._ProductEntity.Entity;
				if (((previousValue != value) 
							|| (this._ProductEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductEntity.Entity = null;
						previousValue.EntityItem = null;
					}
					this._ProductEntity.Entity = value;
					if ((value != null))
					{
						value.EntityItem = this;
					}
					this.SendPropertyChanged("ProductEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityLogXrefEntityItems(ActivityLogXrefEntityItem entity)
		{
			this.SendPropertyChanging();
			entity.EntityItem = this;
		}
		
		private void detach_ActivityLogXrefEntityItems(ActivityLogXrefEntityItem entity)
		{
			this.SendPropertyChanging();
			entity.EntityItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassEntity")]
	public partial class ClassEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _classID;
		
		private long _speakerID;
		
		private string _description;
		
		private System.Nullable<System.TimeSpan> _duration;
		
		private int _statDownloadCnt;
		
		private int _statListenCnt;
		
		private System.Nullable<int> _newOrder;
		
		private EntityRef<EntityItem> _EntityItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclassIDChanging(long value);
    partial void OnclassIDChanged();
    partial void OnspeakerIDChanging(long value);
    partial void OnspeakerIDChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndurationChanging(System.Nullable<System.TimeSpan> value);
    partial void OndurationChanged();
    partial void OnstatDownloadCntChanging(int value);
    partial void OnstatDownloadCntChanged();
    partial void OnstatListenCntChanging(int value);
    partial void OnstatListenCntChanged();
    partial void OnnewOrderChanging(System.Nullable<int> value);
    partial void OnnewOrderChanged();
    #endregion
		
		public ClassEntity()
		{
			this._EntityItem = default(EntityRef<EntityItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long classID
		{
			get
			{
				return this._classID;
			}
			set
			{
				if ((this._classID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnclassIDChanging(value);
					this.SendPropertyChanging();
					this._classID = value;
					this.SendPropertyChanged("classID");
					this.OnclassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speakerID", DbType="BigInt NOT NULL")]
		public long speakerID
		{
			get
			{
				return this._speakerID;
			}
			set
			{
				if ((this._speakerID != value))
				{
					this.OnspeakerIDChanging(value);
					this.SendPropertyChanging();
					this._speakerID = value;
					this.SendPropertyChanged("speakerID");
					this.OnspeakerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="Time")]
		public System.Nullable<System.TimeSpan> duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statDownloadCnt", DbType="Int NOT NULL")]
		public int statDownloadCnt
		{
			get
			{
				return this._statDownloadCnt;
			}
			set
			{
				if ((this._statDownloadCnt != value))
				{
					this.OnstatDownloadCntChanging(value);
					this.SendPropertyChanging();
					this._statDownloadCnt = value;
					this.SendPropertyChanged("statDownloadCnt");
					this.OnstatDownloadCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statListenCnt", DbType="Int NOT NULL")]
		public int statListenCnt
		{
			get
			{
				return this._statListenCnt;
			}
			set
			{
				if ((this._statListenCnt != value))
				{
					this.OnstatListenCntChanging(value);
					this.SendPropertyChanging();
					this._statListenCnt = value;
					this.SendPropertyChanged("statListenCnt");
					this.OnstatListenCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_newOrder", DbType="Int")]
		public System.Nullable<int> newOrder
		{
			get
			{
				return this._newOrder;
			}
			set
			{
				if ((this._newOrder != value))
				{
					this.OnnewOrderChanging(value);
					this.SendPropertyChanging();
					this._newOrder = value;
					this.SendPropertyChanged("newOrder");
					this.OnnewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ClassEntity", Storage="_EntityItem", ThisKey="classID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.ClassEntity = null;
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.ClassEntity = this;
						this._classID = value.entityID;
					}
					else
					{
						this._classID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductEntity")]
	public partial class ProductEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _productID;
		
		private short _productTypeID;
		
		private System.Nullable<decimal> _price1;
		
		private System.Nullable<decimal> _price2;

        private bool _unlimitedAccessInLibrary;

        private string _description;
		
		private EntityRef<EntityItem> _EntityItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIDChanging(long value);
    partial void OnproductIDChanged();
    partial void OnproductTypeIDChanging(short value);
    partial void OnproductTypeIDChanged();
    partial void Onprice1Changing(System.Nullable<decimal> value);
    partial void Onprice1Changed();
    partial void Onprice2Changing(System.Nullable<decimal> value);
    partial void Onprice2Changed();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnunlimitedAccessInLibraryChanging(bool value);
    partial void OnunlimitedAccessInLibraryChanged();
    #endregion
		
		public ProductEntity()
		{
			this._EntityItem = default(EntityRef<EntityItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._EntityItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productTypeID", DbType="SmallInt NOT NULL")]
		public short productTypeID
		{
			get
			{
				return this._productTypeID;
			}
			set
			{
				if ((this._productTypeID != value))
				{
					this.OnproductTypeIDChanging(value);
					this.SendPropertyChanging();
					this._productTypeID = value;
					this.SendPropertyChanged("productTypeID");
					this.OnproductTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price1", DbType="Money")]
		public System.Nullable<decimal> price1
		{
			get
			{
				return this._price1;
			}
			set
			{
				if ((this._price1 != value))
				{
					this.Onprice1Changing(value);
					this.SendPropertyChanging();
					this._price1 = value;
					this.SendPropertyChanged("price1");
					this.Onprice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price2", DbType="Money")]
		public System.Nullable<decimal> price2
		{
			get
			{
				return this._price2;
			}
			set
			{
				if ((this._price2 != value))
				{
					this.Onprice2Changing(value);
					this.SendPropertyChanging();
					this._price2 = value;
					this.SendPropertyChanged("price2");
					this.Onprice2Changed();
				}
			}
		}

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_unlimitedAccessInLibrary", DbType = "Bit NO NULL")]
        public bool unlimitedAccessInLibrary
        {
            get
            {
                return this._unlimitedAccessInLibrary;
            }
            set
            {
                if ((this._unlimitedAccessInLibrary != value))
                {
                    this.OnunlimitedAccessInLibraryChanging(value);
                    this.SendPropertyChanging();
                    this._unlimitedAccessInLibrary = value;
                    this.SendPropertyChanged("unlimitedAccessInLibrary");
                    this.OnunlimitedAccessInLibraryChanged();
                }
            }
        }

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityItem_ProductEntity", Storage="_EntityItem", ThisKey="productID", OtherKey="entityID", IsForeignKey=true)]
		public EntityItem EntityItem
		{
			get
			{
				return this._EntityItem.Entity;
			}
			set
			{
				EntityItem previousValue = this._EntityItem.Entity;
				if (((previousValue != value) 
							|| (this._EntityItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityItem.Entity = null;
						previousValue.ProductEntity = null;
					}
					this._EntityItem.Entity = value;
					if ((value != null))
					{
						value.ProductEntity = this;
						this._productID = value.entityID;
					}
					else
					{
						this._productID = default(long);
					}
					this.SendPropertyChanged("EntityItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Membership")]
	public partial class Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private bool _activatedCart;
		
		private System.Nullable<System.DateTime> _activationCartDate;
		
		private decimal _balance;
		
		private string _firstName;
		
		private string _lastName;
		
		private int _freeOfferCnt;
		
		private string _refferedBy;
		
		private string _country;
		
		private string _postalCode;
		
		private string _state;
		
		private string _city;
		
		private string _postalAdderss;
		
		private string _phone;
		
		private string _dayPhone;
		
		private System.Nullable<System.DateTime> _subscribeActivation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnactivatedCartChanging(bool value);
    partial void OnactivatedCartChanged();
    partial void OnactivationCartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnactivationCartDateChanged();
    partial void OnbalanceChanging(decimal value);
    partial void OnbalanceChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnfreeOfferCntChanging(int value);
    partial void OnfreeOfferCntChanged();
    partial void OnrefferedByChanging(string value);
    partial void OnrefferedByChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpostalAdderssChanging(string value);
    partial void OnpostalAdderssChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OndayPhoneChanging(string value);
    partial void OndayPhoneChanged();
    partial void OnsubscribeActivationChanging(System.Nullable<System.DateTime> value);
    partial void OnsubscribeActivationChanged();
    #endregion
		
		public Membership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activatedCart", DbType="Bit NOT NULL")]
		public bool activatedCart
		{
			get
			{
				return this._activatedCart;
			}
			set
			{
				if ((this._activatedCart != value))
				{
					this.OnactivatedCartChanging(value);
					this.SendPropertyChanging();
					this._activatedCart = value;
					this.SendPropertyChanged("activatedCart");
					this.OnactivatedCartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activationCartDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> activationCartDate
		{
			get
			{
				return this._activationCartDate;
			}
			set
			{
				if ((this._activationCartDate != value))
				{
					this.OnactivationCartDateChanging(value);
					this.SendPropertyChanging();
					this._activationCartDate = value;
					this.SendPropertyChanged("activationCartDate");
					this.OnactivationCartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Money NOT NULL")]
		public decimal balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(256)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(256)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_freeOfferCnt", DbType="Int NOT NULL")]
		public int freeOfferCnt
		{
			get
			{
				return this._freeOfferCnt;
			}
			set
			{
				if ((this._freeOfferCnt != value))
				{
					this.OnfreeOfferCntChanging(value);
					this.SendPropertyChanging();
					this._freeOfferCnt = value;
					this.SendPropertyChanged("freeOfferCnt");
					this.OnfreeOfferCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_refferedBy", DbType="NVarChar(256)")]
		public string refferedBy
		{
			get
			{
				return this._refferedBy;
			}
			set
			{
				if ((this._refferedBy != value))
				{
					this.OnrefferedByChanging(value);
					this.SendPropertyChanging();
					this._refferedBy = value;
					this.SendPropertyChanged("refferedBy");
					this.OnrefferedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(256)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="NVarChar(64)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(16)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(256)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalAdderss", DbType="NVarChar(256)")]
		public string postalAdderss
		{
			get
			{
				return this._postalAdderss;
			}
			set
			{
				if ((this._postalAdderss != value))
				{
					this.OnpostalAdderssChanging(value);
					this.SendPropertyChanging();
					this._postalAdderss = value;
					this.SendPropertyChanged("postalAdderss");
					this.OnpostalAdderssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(256)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dayPhone", DbType="NVarChar(256)")]
		public string dayPhone
		{
			get
			{
				return this._dayPhone;
			}
			set
			{
				if ((this._dayPhone != value))
				{
					this.OndayPhoneChanging(value);
					this.SendPropertyChanging();
					this._dayPhone = value;
					this.SendPropertyChanged("dayPhone");
					this.OndayPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscribeActivation", DbType="DateTime")]
		public System.Nullable<System.DateTime> subscribeActivation
		{
			get
			{
				return this._subscribeActivation;
			}
			set
			{
				if ((this._subscribeActivation != value))
				{
					this.OnsubscribeActivationChanging(value);
					this.SendPropertyChanging();
					this._subscribeActivation = value;
					this.SendPropertyChanged("subscribeActivation");
					this.OnsubscribeActivationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
